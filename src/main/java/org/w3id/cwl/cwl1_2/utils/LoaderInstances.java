package org.w3id.cwl.cwl1_2.utils;

import java.util.List;
import org.w3id.cwl.cwl1_2.*;

public class LoaderInstances {
  public static Loader<String> StringInstance = new PrimitiveLoader<String>(String.class);
  public static Loader<Integer> IntegerInstance = new PrimitiveLoader<Integer>(Integer.class);
  public static Loader<Long> LongInstance = new PrimitiveLoader<Long>(Long.class);
  public static Loader<Double> DoubleInstance = new PrimitiveLoader<Double>(Double.class);
  public static Loader<Boolean> BooleanInstance = new PrimitiveLoader<Boolean>(Boolean.class);
  public static Loader<Object> NullInstance = new NullLoader();
  public static Loader<Object> AnyInstance = new AnyLoader();
  public static Loader<org.w3id.cwl.cwl1_2.Documented> Documented = new RecordLoader<org.w3id.cwl.cwl1_2.Documented>(org.w3id.cwl.cwl1_2.Documented.class);
  public static Loader<PrimitiveType> PrimitiveType = new EnumLoader(PrimitiveType.class);
  public static Loader<Any> Any = new EnumLoader(Any.class);
  public static Loader<org.w3id.cwl.cwl1_2.RecordField> RecordField = new RecordLoader<org.w3id.cwl.cwl1_2.RecordField>(org.w3id.cwl.cwl1_2.RecordFieldImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.RecordSchema> RecordSchema = new RecordLoader<org.w3id.cwl.cwl1_2.RecordSchema>(org.w3id.cwl.cwl1_2.RecordSchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.EnumSchema> EnumSchema = new RecordLoader<org.w3id.cwl.cwl1_2.EnumSchema>(org.w3id.cwl.cwl1_2.EnumSchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.ArraySchema> ArraySchema = new RecordLoader<org.w3id.cwl.cwl1_2.ArraySchema>(org.w3id.cwl.cwl1_2.ArraySchemaImpl.class);
  public static Loader<CWLVersion> CWLVersion = new EnumLoader(CWLVersion.class);
  public static Loader<CWLType> CWLType = new EnumLoader(CWLType.class);
  public static Loader<org.w3id.cwl.cwl1_2.File> File = new RecordLoader<org.w3id.cwl.cwl1_2.File>(org.w3id.cwl.cwl1_2.FileImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.Directory> Directory = new RecordLoader<org.w3id.cwl.cwl1_2.Directory>(org.w3id.cwl.cwl1_2.DirectoryImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.Labeled> Labeled = new RecordLoader<org.w3id.cwl.cwl1_2.Labeled>(org.w3id.cwl.cwl1_2.Labeled.class);
  public static Loader<org.w3id.cwl.cwl1_2.Identified> Identified = new RecordLoader<org.w3id.cwl.cwl1_2.Identified>(org.w3id.cwl.cwl1_2.Identified.class);
  public static Loader<LoadListingEnum> LoadListingEnum = new EnumLoader(LoadListingEnum.class);
  public static Loader<org.w3id.cwl.cwl1_2.LoadContents> LoadContents = new RecordLoader<org.w3id.cwl.cwl1_2.LoadContents>(org.w3id.cwl.cwl1_2.LoadContents.class);
  public static Loader<org.w3id.cwl.cwl1_2.FieldBase> FieldBase = new RecordLoader<org.w3id.cwl.cwl1_2.FieldBase>(org.w3id.cwl.cwl1_2.FieldBase.class);
  public static Loader<org.w3id.cwl.cwl1_2.InputFormat> InputFormat = new RecordLoader<org.w3id.cwl.cwl1_2.InputFormat>(org.w3id.cwl.cwl1_2.InputFormat.class);
  public static Loader<org.w3id.cwl.cwl1_2.OutputFormat> OutputFormat = new RecordLoader<org.w3id.cwl.cwl1_2.OutputFormat>(org.w3id.cwl.cwl1_2.OutputFormat.class);
  public static Loader<org.w3id.cwl.cwl1_2.Parameter> Parameter = new RecordLoader<org.w3id.cwl.cwl1_2.Parameter>(org.w3id.cwl.cwl1_2.Parameter.class);
  public static Loader<Expression> Expression = new EnumLoader(Expression.class);
  public static Loader<org.w3id.cwl.cwl1_2.InputBinding> InputBinding = new RecordLoader<org.w3id.cwl.cwl1_2.InputBinding>(org.w3id.cwl.cwl1_2.InputBindingImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.IOSchema> IOSchema = new RecordLoader<org.w3id.cwl.cwl1_2.IOSchema>(org.w3id.cwl.cwl1_2.IOSchema.class);
  public static Loader<org.w3id.cwl.cwl1_2.InputSchema> InputSchema = new RecordLoader<org.w3id.cwl.cwl1_2.InputSchema>(org.w3id.cwl.cwl1_2.InputSchema.class);
  public static Loader<org.w3id.cwl.cwl1_2.OutputSchema> OutputSchema = new RecordLoader<org.w3id.cwl.cwl1_2.OutputSchema>(org.w3id.cwl.cwl1_2.OutputSchema.class);
  public static Loader<org.w3id.cwl.cwl1_2.InputRecordField> InputRecordField = new RecordLoader<org.w3id.cwl.cwl1_2.InputRecordField>(org.w3id.cwl.cwl1_2.InputRecordFieldImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.InputRecordSchema> InputRecordSchema = new RecordLoader<org.w3id.cwl.cwl1_2.InputRecordSchema>(org.w3id.cwl.cwl1_2.InputRecordSchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.InputEnumSchema> InputEnumSchema = new RecordLoader<org.w3id.cwl.cwl1_2.InputEnumSchema>(org.w3id.cwl.cwl1_2.InputEnumSchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.InputArraySchema> InputArraySchema = new RecordLoader<org.w3id.cwl.cwl1_2.InputArraySchema>(org.w3id.cwl.cwl1_2.InputArraySchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.OutputRecordField> OutputRecordField = new RecordLoader<org.w3id.cwl.cwl1_2.OutputRecordField>(org.w3id.cwl.cwl1_2.OutputRecordFieldImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.OutputRecordSchema> OutputRecordSchema = new RecordLoader<org.w3id.cwl.cwl1_2.OutputRecordSchema>(org.w3id.cwl.cwl1_2.OutputRecordSchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.OutputEnumSchema> OutputEnumSchema = new RecordLoader<org.w3id.cwl.cwl1_2.OutputEnumSchema>(org.w3id.cwl.cwl1_2.OutputEnumSchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.OutputArraySchema> OutputArraySchema = new RecordLoader<org.w3id.cwl.cwl1_2.OutputArraySchema>(org.w3id.cwl.cwl1_2.OutputArraySchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.InputParameter> InputParameter = new RecordLoader<org.w3id.cwl.cwl1_2.InputParameter>(org.w3id.cwl.cwl1_2.InputParameter.class);
  public static Loader<org.w3id.cwl.cwl1_2.OutputParameter> OutputParameter = new RecordLoader<org.w3id.cwl.cwl1_2.OutputParameter>(org.w3id.cwl.cwl1_2.OutputParameter.class);
  public static Loader<org.w3id.cwl.cwl1_2.ProcessRequirement> ProcessRequirement = new RecordLoader<org.w3id.cwl.cwl1_2.ProcessRequirement>(org.w3id.cwl.cwl1_2.ProcessRequirement.class);
  public static Loader<org.w3id.cwl.cwl1_2.Process> Process = new RecordLoader<org.w3id.cwl.cwl1_2.Process>(org.w3id.cwl.cwl1_2.Process.class);
  public static Loader<org.w3id.cwl.cwl1_2.InlineJavascriptRequirement> InlineJavascriptRequirement = new RecordLoader<org.w3id.cwl.cwl1_2.InlineJavascriptRequirement>(org.w3id.cwl.cwl1_2.InlineJavascriptRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.CommandInputSchema> CommandInputSchema = new RecordLoader<org.w3id.cwl.cwl1_2.CommandInputSchema>(org.w3id.cwl.cwl1_2.CommandInputSchema.class);
  public static Loader<org.w3id.cwl.cwl1_2.SchemaDefRequirement> SchemaDefRequirement = new RecordLoader<org.w3id.cwl.cwl1_2.SchemaDefRequirement>(org.w3id.cwl.cwl1_2.SchemaDefRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.SecondaryFileSchema> SecondaryFileSchema = new RecordLoader<org.w3id.cwl.cwl1_2.SecondaryFileSchema>(org.w3id.cwl.cwl1_2.SecondaryFileSchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.LoadListingRequirement> LoadListingRequirement = new RecordLoader<org.w3id.cwl.cwl1_2.LoadListingRequirement>(org.w3id.cwl.cwl1_2.LoadListingRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.EnvironmentDef> EnvironmentDef = new RecordLoader<org.w3id.cwl.cwl1_2.EnvironmentDef>(org.w3id.cwl.cwl1_2.EnvironmentDefImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.CommandLineBinding> CommandLineBinding = new RecordLoader<org.w3id.cwl.cwl1_2.CommandLineBinding>(org.w3id.cwl.cwl1_2.CommandLineBindingImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.CommandOutputBinding> CommandOutputBinding = new RecordLoader<org.w3id.cwl.cwl1_2.CommandOutputBinding>(org.w3id.cwl.cwl1_2.CommandOutputBindingImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.CommandLineBindable> CommandLineBindable = new RecordLoader<org.w3id.cwl.cwl1_2.CommandLineBindable>(org.w3id.cwl.cwl1_2.CommandLineBindableImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.CommandInputRecordField> CommandInputRecordField = new RecordLoader<org.w3id.cwl.cwl1_2.CommandInputRecordField>(org.w3id.cwl.cwl1_2.CommandInputRecordFieldImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.CommandInputRecordSchema> CommandInputRecordSchema = new RecordLoader<org.w3id.cwl.cwl1_2.CommandInputRecordSchema>(org.w3id.cwl.cwl1_2.CommandInputRecordSchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.CommandInputEnumSchema> CommandInputEnumSchema = new RecordLoader<org.w3id.cwl.cwl1_2.CommandInputEnumSchema>(org.w3id.cwl.cwl1_2.CommandInputEnumSchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.CommandInputArraySchema> CommandInputArraySchema = new RecordLoader<org.w3id.cwl.cwl1_2.CommandInputArraySchema>(org.w3id.cwl.cwl1_2.CommandInputArraySchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.CommandOutputRecordField> CommandOutputRecordField = new RecordLoader<org.w3id.cwl.cwl1_2.CommandOutputRecordField>(org.w3id.cwl.cwl1_2.CommandOutputRecordFieldImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.CommandOutputRecordSchema> CommandOutputRecordSchema = new RecordLoader<org.w3id.cwl.cwl1_2.CommandOutputRecordSchema>(org.w3id.cwl.cwl1_2.CommandOutputRecordSchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.CommandOutputEnumSchema> CommandOutputEnumSchema = new RecordLoader<org.w3id.cwl.cwl1_2.CommandOutputEnumSchema>(org.w3id.cwl.cwl1_2.CommandOutputEnumSchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.CommandOutputArraySchema> CommandOutputArraySchema = new RecordLoader<org.w3id.cwl.cwl1_2.CommandOutputArraySchema>(org.w3id.cwl.cwl1_2.CommandOutputArraySchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.CommandInputParameter> CommandInputParameter = new RecordLoader<org.w3id.cwl.cwl1_2.CommandInputParameter>(org.w3id.cwl.cwl1_2.CommandInputParameterImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.CommandOutputParameter> CommandOutputParameter = new RecordLoader<org.w3id.cwl.cwl1_2.CommandOutputParameter>(org.w3id.cwl.cwl1_2.CommandOutputParameterImpl.class);
  public static Loader<stdin> stdin = new EnumLoader(stdin.class);
  public static Loader<stdout> stdout = new EnumLoader(stdout.class);
  public static Loader<stderr> stderr = new EnumLoader(stderr.class);
  public static Loader<org.w3id.cwl.cwl1_2.CommandLineTool> CommandLineTool = new RecordLoader<org.w3id.cwl.cwl1_2.CommandLineTool>(org.w3id.cwl.cwl1_2.CommandLineToolImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.DockerRequirement> DockerRequirement = new RecordLoader<org.w3id.cwl.cwl1_2.DockerRequirement>(org.w3id.cwl.cwl1_2.DockerRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.SoftwareRequirement> SoftwareRequirement = new RecordLoader<org.w3id.cwl.cwl1_2.SoftwareRequirement>(org.w3id.cwl.cwl1_2.SoftwareRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.SoftwarePackage> SoftwarePackage = new RecordLoader<org.w3id.cwl.cwl1_2.SoftwarePackage>(org.w3id.cwl.cwl1_2.SoftwarePackageImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.Dirent> Dirent = new RecordLoader<org.w3id.cwl.cwl1_2.Dirent>(org.w3id.cwl.cwl1_2.DirentImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.InitialWorkDirRequirement> InitialWorkDirRequirement = new RecordLoader<org.w3id.cwl.cwl1_2.InitialWorkDirRequirement>(org.w3id.cwl.cwl1_2.InitialWorkDirRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.EnvVarRequirement> EnvVarRequirement = new RecordLoader<org.w3id.cwl.cwl1_2.EnvVarRequirement>(org.w3id.cwl.cwl1_2.EnvVarRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.ShellCommandRequirement> ShellCommandRequirement = new RecordLoader<org.w3id.cwl.cwl1_2.ShellCommandRequirement>(org.w3id.cwl.cwl1_2.ShellCommandRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.ResourceRequirement> ResourceRequirement = new RecordLoader<org.w3id.cwl.cwl1_2.ResourceRequirement>(org.w3id.cwl.cwl1_2.ResourceRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.WorkReuse> WorkReuse = new RecordLoader<org.w3id.cwl.cwl1_2.WorkReuse>(org.w3id.cwl.cwl1_2.WorkReuseImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.NetworkAccess> NetworkAccess = new RecordLoader<org.w3id.cwl.cwl1_2.NetworkAccess>(org.w3id.cwl.cwl1_2.NetworkAccessImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.InplaceUpdateRequirement> InplaceUpdateRequirement = new RecordLoader<org.w3id.cwl.cwl1_2.InplaceUpdateRequirement>(org.w3id.cwl.cwl1_2.InplaceUpdateRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.ToolTimeLimit> ToolTimeLimit = new RecordLoader<org.w3id.cwl.cwl1_2.ToolTimeLimit>(org.w3id.cwl.cwl1_2.ToolTimeLimitImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.ExpressionToolOutputParameter> ExpressionToolOutputParameter = new RecordLoader<org.w3id.cwl.cwl1_2.ExpressionToolOutputParameter>(org.w3id.cwl.cwl1_2.ExpressionToolOutputParameterImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.WorkflowInputParameter> WorkflowInputParameter = new RecordLoader<org.w3id.cwl.cwl1_2.WorkflowInputParameter>(org.w3id.cwl.cwl1_2.WorkflowInputParameterImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.ExpressionTool> ExpressionTool = new RecordLoader<org.w3id.cwl.cwl1_2.ExpressionTool>(org.w3id.cwl.cwl1_2.ExpressionToolImpl.class);
  public static Loader<LinkMergeMethod> LinkMergeMethod = new EnumLoader(LinkMergeMethod.class);
  public static Loader<PickValueMethod> PickValueMethod = new EnumLoader(PickValueMethod.class);
  public static Loader<org.w3id.cwl.cwl1_2.WorkflowOutputParameter> WorkflowOutputParameter = new RecordLoader<org.w3id.cwl.cwl1_2.WorkflowOutputParameter>(org.w3id.cwl.cwl1_2.WorkflowOutputParameterImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.Sink> Sink = new RecordLoader<org.w3id.cwl.cwl1_2.Sink>(org.w3id.cwl.cwl1_2.Sink.class);
  public static Loader<org.w3id.cwl.cwl1_2.WorkflowStepInput> WorkflowStepInput = new RecordLoader<org.w3id.cwl.cwl1_2.WorkflowStepInput>(org.w3id.cwl.cwl1_2.WorkflowStepInputImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.WorkflowStepOutput> WorkflowStepOutput = new RecordLoader<org.w3id.cwl.cwl1_2.WorkflowStepOutput>(org.w3id.cwl.cwl1_2.WorkflowStepOutputImpl.class);
  public static Loader<ScatterMethod> ScatterMethod = new EnumLoader(ScatterMethod.class);
  public static Loader<org.w3id.cwl.cwl1_2.WorkflowStep> WorkflowStep = new RecordLoader<org.w3id.cwl.cwl1_2.WorkflowStep>(org.w3id.cwl.cwl1_2.WorkflowStepImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.Workflow> Workflow = new RecordLoader<org.w3id.cwl.cwl1_2.Workflow>(org.w3id.cwl.cwl1_2.WorkflowImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.SubworkflowFeatureRequirement> SubworkflowFeatureRequirement = new RecordLoader<org.w3id.cwl.cwl1_2.SubworkflowFeatureRequirement>(org.w3id.cwl.cwl1_2.SubworkflowFeatureRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.ScatterFeatureRequirement> ScatterFeatureRequirement = new RecordLoader<org.w3id.cwl.cwl1_2.ScatterFeatureRequirement>(org.w3id.cwl.cwl1_2.ScatterFeatureRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.MultipleInputFeatureRequirement> MultipleInputFeatureRequirement = new RecordLoader<org.w3id.cwl.cwl1_2.MultipleInputFeatureRequirement>(org.w3id.cwl.cwl1_2.MultipleInputFeatureRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.StepInputExpressionRequirement> StepInputExpressionRequirement = new RecordLoader<org.w3id.cwl.cwl1_2.StepInputExpressionRequirement>(org.w3id.cwl.cwl1_2.StepInputExpressionRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.OperationInputParameter> OperationInputParameter = new RecordLoader<org.w3id.cwl.cwl1_2.OperationInputParameter>(org.w3id.cwl.cwl1_2.OperationInputParameterImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.OperationOutputParameter> OperationOutputParameter = new RecordLoader<org.w3id.cwl.cwl1_2.OperationOutputParameter>(org.w3id.cwl.cwl1_2.OperationOutputParameterImpl.class);
  public static Loader<org.w3id.cwl.cwl1_2.Operation> Operation = new RecordLoader<org.w3id.cwl.cwl1_2.Operation>(org.w3id.cwl.cwl1_2.OperationImpl.class);
  public static Loader<java.util.List<String>> array_of_StringInstance = new ArrayLoader(StringInstance);
  public static Loader<Object> union_of_NullInstance_or_StringInstance_or_array_of_StringInstance = new UnionLoader(new Loader[] { NullInstance, StringInstance, array_of_StringInstance });
  public static Loader<String> uri_StringInstance_True_False_None_None = new UriLoader(StringInstance, true, false, null, null);
  public static Loader<Object> union_of_PrimitiveType_or_RecordSchema_or_EnumSchema_or_ArraySchema_or_StringInstance = new UnionLoader(new Loader[] { PrimitiveType, RecordSchema, EnumSchema, ArraySchema, StringInstance });
  public static Loader<java.util.List<Object>> array_of_union_of_PrimitiveType_or_RecordSchema_or_EnumSchema_or_ArraySchema_or_StringInstance = new ArrayLoader(union_of_PrimitiveType_or_RecordSchema_or_EnumSchema_or_ArraySchema_or_StringInstance);
  public static Loader<Object> union_of_PrimitiveType_or_RecordSchema_or_EnumSchema_or_ArraySchema_or_StringInstance_or_array_of_union_of_PrimitiveType_or_RecordSchema_or_EnumSchema_or_ArraySchema_or_StringInstance = new UnionLoader(new Loader[] { PrimitiveType, RecordSchema, EnumSchema, ArraySchema, StringInstance, array_of_union_of_PrimitiveType_or_RecordSchema_or_EnumSchema_or_ArraySchema_or_StringInstance });
  public static Loader<Object> typedsl_union_of_PrimitiveType_or_RecordSchema_or_EnumSchema_or_ArraySchema_or_StringInstance_or_array_of_union_of_PrimitiveType_or_RecordSchema_or_EnumSchema_or_ArraySchema_or_StringInstance_2 = new TypeDslLoader(union_of_PrimitiveType_or_RecordSchema_or_EnumSchema_or_ArraySchema_or_StringInstance_or_array_of_union_of_PrimitiveType_or_RecordSchema_or_EnumSchema_or_ArraySchema_or_StringInstance, 2);
  public static Loader<java.util.List<RecordField>> array_of_RecordField = new ArrayLoader(RecordField);
  public static Loader<java.util.Optional<java.util.List<Object>>> optional_array_of_RecordField = new OptionalLoader(array_of_RecordField);
  public static Loader<java.util.Optional<java.util.List<Object>>> idmap_fields_optional_array_of_RecordField = new IdMapLoader(optional_array_of_RecordField, "name", "type");
  public static Loader<Record_name> Record_name = new EnumLoader(Record_name.class);
  public static Loader<Record_name> typedsl_Record_name_2 = new TypeDslLoader(Record_name, 2);
  public static Loader<java.util.Optional<String>> optional_StringInstance = new OptionalLoader(StringInstance);
  public static Loader<java.util.Optional<String>> uri_optional_StringInstance_True_False_None_None = new UriLoader(optional_StringInstance, true, false, null, null);
  public static Loader<java.util.List<String>> uri_array_of_StringInstance_True_False_None_None = new UriLoader(array_of_StringInstance, true, false, null, null);
  public static Loader<Enum_name> Enum_name = new EnumLoader(Enum_name.class);
  public static Loader<Enum_name> typedsl_Enum_name_2 = new TypeDslLoader(Enum_name, 2);
  public static Loader<Object> uri_union_of_PrimitiveType_or_RecordSchema_or_EnumSchema_or_ArraySchema_or_StringInstance_or_array_of_union_of_PrimitiveType_or_RecordSchema_or_EnumSchema_or_ArraySchema_or_StringInstance_False_True_2_None = new UriLoader(union_of_PrimitiveType_or_RecordSchema_or_EnumSchema_or_ArraySchema_or_StringInstance_or_array_of_union_of_PrimitiveType_or_RecordSchema_or_EnumSchema_or_ArraySchema_or_StringInstance, false, true, 2, null);
  public static Loader<Array_name> Array_name = new EnumLoader(Array_name.class);
  public static Loader<Array_name> typedsl_Array_name_2 = new TypeDslLoader(Array_name, 2);
  public static Loader<File_class> File_class = new EnumLoader(File_class.class);
  public static Loader<File_class> uri_File_class_False_True_None_None = new UriLoader(File_class, false, true, null, null);
  public static Loader<java.util.Optional<String>> uri_optional_StringInstance_False_False_None_None = new UriLoader(optional_StringInstance, false, false, null, null);
  public static Loader<Object> union_of_NullInstance_or_IntegerInstance_or_LongInstance = new UnionLoader(new Loader[] { NullInstance, IntegerInstance, LongInstance });
  public static Loader<Object> union_of_File_or_Directory = new UnionLoader(new Loader[] { File, Directory });
  public static Loader<java.util.List<Object>> array_of_union_of_File_or_Directory = new ArrayLoader(union_of_File_or_Directory);
  public static Loader<java.util.Optional<java.util.List<Object>>> optional_array_of_union_of_File_or_Directory = new OptionalLoader(array_of_union_of_File_or_Directory);
  public static Loader<java.util.Optional<java.util.List<Object>>> secondaryfilesdsl_optional_array_of_union_of_File_or_Directory = new SecondaryFilesDslLoader(optional_array_of_union_of_File_or_Directory);
  public static Loader<Directory_class> Directory_class = new EnumLoader(Directory_class.class);
  public static Loader<Directory_class> uri_Directory_class_False_True_None_None = new UriLoader(Directory_class, false, true, null, null);
  public static Loader<java.util.Optional<Boolean>> optional_BooleanInstance = new OptionalLoader(BooleanInstance);
  public static Loader<java.util.Optional<LoadListingEnum>> optional_LoadListingEnum = new OptionalLoader(LoadListingEnum);
  public static Loader<java.util.List<SecondaryFileSchema>> array_of_SecondaryFileSchema = new ArrayLoader(SecondaryFileSchema);
  public static Loader<Object> union_of_NullInstance_or_SecondaryFileSchema_or_array_of_SecondaryFileSchema = new UnionLoader(new Loader[] { NullInstance, SecondaryFileSchema, array_of_SecondaryFileSchema });
  public static Loader<Object> secondaryfilesdsl_union_of_NullInstance_or_SecondaryFileSchema_or_array_of_SecondaryFileSchema = new SecondaryFilesDslLoader(union_of_NullInstance_or_SecondaryFileSchema_or_array_of_SecondaryFileSchema);
  public static Loader<String> ExpressionLoader = new ExpressionLoader();
  public static Loader<Object> union_of_NullInstance_or_StringInstance_or_array_of_StringInstance_or_ExpressionLoader = new UnionLoader(new Loader[] { NullInstance, StringInstance, array_of_StringInstance, ExpressionLoader });
  public static Loader<Object> uri_union_of_NullInstance_or_StringInstance_or_array_of_StringInstance_or_ExpressionLoader_True_False_None_None = new UriLoader(union_of_NullInstance_or_StringInstance_or_array_of_StringInstance_or_ExpressionLoader, true, false, null, null);
  public static Loader<Object> union_of_NullInstance_or_StringInstance_or_ExpressionLoader = new UnionLoader(new Loader[] { NullInstance, StringInstance, ExpressionLoader });
  public static Loader<Object> uri_union_of_NullInstance_or_StringInstance_or_ExpressionLoader_True_False_None_None = new UriLoader(union_of_NullInstance_or_StringInstance_or_ExpressionLoader, true, false, null, null);
  public static Loader<Object> union_of_CWLType_or_InputRecordSchema_or_InputEnumSchema_or_InputArraySchema_or_StringInstance = new UnionLoader(new Loader[] { CWLType, InputRecordSchema, InputEnumSchema, InputArraySchema, StringInstance });
  public static Loader<java.util.List<Object>> array_of_union_of_CWLType_or_InputRecordSchema_or_InputEnumSchema_or_InputArraySchema_or_StringInstance = new ArrayLoader(union_of_CWLType_or_InputRecordSchema_or_InputEnumSchema_or_InputArraySchema_or_StringInstance);
  public static Loader<Object> union_of_CWLType_or_InputRecordSchema_or_InputEnumSchema_or_InputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_InputRecordSchema_or_InputEnumSchema_or_InputArraySchema_or_StringInstance = new UnionLoader(new Loader[] { CWLType, InputRecordSchema, InputEnumSchema, InputArraySchema, StringInstance, array_of_union_of_CWLType_or_InputRecordSchema_or_InputEnumSchema_or_InputArraySchema_or_StringInstance });
  public static Loader<Object> typedsl_union_of_CWLType_or_InputRecordSchema_or_InputEnumSchema_or_InputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_InputRecordSchema_or_InputEnumSchema_or_InputArraySchema_or_StringInstance_2 = new TypeDslLoader(union_of_CWLType_or_InputRecordSchema_or_InputEnumSchema_or_InputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_InputRecordSchema_or_InputEnumSchema_or_InputArraySchema_or_StringInstance, 2);
  public static Loader<java.util.List<InputRecordField>> array_of_InputRecordField = new ArrayLoader(InputRecordField);
  public static Loader<java.util.Optional<java.util.List<Object>>> optional_array_of_InputRecordField = new OptionalLoader(array_of_InputRecordField);
  public static Loader<java.util.Optional<java.util.List<Object>>> idmap_fields_optional_array_of_InputRecordField = new IdMapLoader(optional_array_of_InputRecordField, "name", "type");
  public static Loader<Object> uri_union_of_CWLType_or_InputRecordSchema_or_InputEnumSchema_or_InputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_InputRecordSchema_or_InputEnumSchema_or_InputArraySchema_or_StringInstance_False_True_2_None = new UriLoader(union_of_CWLType_or_InputRecordSchema_or_InputEnumSchema_or_InputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_InputRecordSchema_or_InputEnumSchema_or_InputArraySchema_or_StringInstance, false, true, 2, null);
  public static Loader<Object> union_of_CWLType_or_OutputRecordSchema_or_OutputEnumSchema_or_OutputArraySchema_or_StringInstance = new UnionLoader(new Loader[] { CWLType, OutputRecordSchema, OutputEnumSchema, OutputArraySchema, StringInstance });
  public static Loader<java.util.List<Object>> array_of_union_of_CWLType_or_OutputRecordSchema_or_OutputEnumSchema_or_OutputArraySchema_or_StringInstance = new ArrayLoader(union_of_CWLType_or_OutputRecordSchema_or_OutputEnumSchema_or_OutputArraySchema_or_StringInstance);
  public static Loader<Object> union_of_CWLType_or_OutputRecordSchema_or_OutputEnumSchema_or_OutputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_OutputRecordSchema_or_OutputEnumSchema_or_OutputArraySchema_or_StringInstance = new UnionLoader(new Loader[] { CWLType, OutputRecordSchema, OutputEnumSchema, OutputArraySchema, StringInstance, array_of_union_of_CWLType_or_OutputRecordSchema_or_OutputEnumSchema_or_OutputArraySchema_or_StringInstance });
  public static Loader<Object> typedsl_union_of_CWLType_or_OutputRecordSchema_or_OutputEnumSchema_or_OutputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_OutputRecordSchema_or_OutputEnumSchema_or_OutputArraySchema_or_StringInstance_2 = new TypeDslLoader(union_of_CWLType_or_OutputRecordSchema_or_OutputEnumSchema_or_OutputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_OutputRecordSchema_or_OutputEnumSchema_or_OutputArraySchema_or_StringInstance, 2);
  public static Loader<java.util.List<OutputRecordField>> array_of_OutputRecordField = new ArrayLoader(OutputRecordField);
  public static Loader<java.util.Optional<java.util.List<Object>>> optional_array_of_OutputRecordField = new OptionalLoader(array_of_OutputRecordField);
  public static Loader<java.util.Optional<java.util.List<Object>>> idmap_fields_optional_array_of_OutputRecordField = new IdMapLoader(optional_array_of_OutputRecordField, "name", "type");
  public static Loader<Object> uri_union_of_CWLType_or_OutputRecordSchema_or_OutputEnumSchema_or_OutputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_OutputRecordSchema_or_OutputEnumSchema_or_OutputArraySchema_or_StringInstance_False_True_2_None = new UriLoader(union_of_CWLType_or_OutputRecordSchema_or_OutputEnumSchema_or_OutputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_OutputRecordSchema_or_OutputEnumSchema_or_OutputArraySchema_or_StringInstance, false, true, 2, null);
  public static Loader<Object> union_of_NullInstance_or_File_or_Directory_or_AnyInstance = new UnionLoader(new Loader[] { NullInstance, File, Directory, AnyInstance });
  public static Loader<Object> union_of_CommandInputParameter_or_WorkflowInputParameter_or_OperationInputParameter = new UnionLoader(new Loader[] { CommandInputParameter, WorkflowInputParameter, OperationInputParameter });
  public static Loader<java.util.List<Object>> array_of_union_of_CommandInputParameter_or_WorkflowInputParameter_or_OperationInputParameter = new ArrayLoader(union_of_CommandInputParameter_or_WorkflowInputParameter_or_OperationInputParameter);
  public static Loader<java.util.List<Object>> idmap_inputs_array_of_union_of_CommandInputParameter_or_WorkflowInputParameter_or_OperationInputParameter = new IdMapLoader(array_of_union_of_CommandInputParameter_or_WorkflowInputParameter_or_OperationInputParameter, "id", "type");
  public static Loader<Object> union_of_CommandOutputParameter_or_ExpressionToolOutputParameter_or_WorkflowOutputParameter_or_OperationOutputParameter = new UnionLoader(new Loader[] { CommandOutputParameter, ExpressionToolOutputParameter, WorkflowOutputParameter, OperationOutputParameter });
  public static Loader<java.util.List<Object>> array_of_union_of_CommandOutputParameter_or_ExpressionToolOutputParameter_or_WorkflowOutputParameter_or_OperationOutputParameter = new ArrayLoader(union_of_CommandOutputParameter_or_ExpressionToolOutputParameter_or_WorkflowOutputParameter_or_OperationOutputParameter);
  public static Loader<java.util.List<Object>> idmap_outputs_array_of_union_of_CommandOutputParameter_or_ExpressionToolOutputParameter_or_WorkflowOutputParameter_or_OperationOutputParameter = new IdMapLoader(array_of_union_of_CommandOutputParameter_or_ExpressionToolOutputParameter_or_WorkflowOutputParameter_or_OperationOutputParameter, "id", "type");
  public static Loader<Object> union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement = new UnionLoader(new Loader[] { InlineJavascriptRequirement, SchemaDefRequirement, LoadListingRequirement, DockerRequirement, SoftwareRequirement, InitialWorkDirRequirement, EnvVarRequirement, ShellCommandRequirement, ResourceRequirement, WorkReuse, NetworkAccess, InplaceUpdateRequirement, ToolTimeLimit, SubworkflowFeatureRequirement, ScatterFeatureRequirement, MultipleInputFeatureRequirement, StepInputExpressionRequirement });
  public static Loader<java.util.List<Object>> array_of_union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement = new ArrayLoader(union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement);
  public static Loader<java.util.Optional<java.util.List<Object>>> optional_array_of_union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement = new OptionalLoader(array_of_union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement);
  public static Loader<java.util.Optional<java.util.List<Object>>> idmap_requirements_optional_array_of_union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement = new IdMapLoader(optional_array_of_union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement, "class", "None");
  public static Loader<Object> union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement_or_AnyInstance = new UnionLoader(new Loader[] { InlineJavascriptRequirement, SchemaDefRequirement, LoadListingRequirement, DockerRequirement, SoftwareRequirement, InitialWorkDirRequirement, EnvVarRequirement, ShellCommandRequirement, ResourceRequirement, WorkReuse, NetworkAccess, InplaceUpdateRequirement, ToolTimeLimit, SubworkflowFeatureRequirement, ScatterFeatureRequirement, MultipleInputFeatureRequirement, StepInputExpressionRequirement, AnyInstance });
  public static Loader<java.util.List<Object>> array_of_union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement_or_AnyInstance = new ArrayLoader(union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement_or_AnyInstance);
  public static Loader<java.util.Optional<java.util.List<Object>>> optional_array_of_union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement_or_AnyInstance = new OptionalLoader(array_of_union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement_or_AnyInstance);
  public static Loader<java.util.Optional<java.util.List<Object>>> idmap_hints_optional_array_of_union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement_or_AnyInstance = new IdMapLoader(optional_array_of_union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement_or_AnyInstance, "class", "None");
  public static Loader<java.util.Optional<CWLVersion>> optional_CWLVersion = new OptionalLoader(CWLVersion);
  public static Loader<java.util.Optional<CWLVersion>> uri_optional_CWLVersion_False_True_None_None = new UriLoader(optional_CWLVersion, false, true, null, null);
  public static Loader<java.util.Optional<java.util.List<String>>> optional_array_of_StringInstance = new OptionalLoader(array_of_StringInstance);
  public static Loader<java.util.Optional<java.util.List<String>>> uri_optional_array_of_StringInstance_True_False_None_None = new UriLoader(optional_array_of_StringInstance, true, false, null, null);
  public static Loader<InlineJavascriptRequirement_class> InlineJavascriptRequirement_class = new EnumLoader(InlineJavascriptRequirement_class.class);
  public static Loader<InlineJavascriptRequirement_class> uri_InlineJavascriptRequirement_class_False_True_None_None = new UriLoader(InlineJavascriptRequirement_class, false, true, null, null);
  public static Loader<SchemaDefRequirement_class> SchemaDefRequirement_class = new EnumLoader(SchemaDefRequirement_class.class);
  public static Loader<SchemaDefRequirement_class> uri_SchemaDefRequirement_class_False_True_None_None = new UriLoader(SchemaDefRequirement_class, false, true, null, null);
  public static Loader<Object> union_of_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema = new UnionLoader(new Loader[] { CommandInputRecordSchema, CommandInputEnumSchema, CommandInputArraySchema });
  public static Loader<java.util.List<Object>> array_of_union_of_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema = new ArrayLoader(union_of_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema);
  public static Loader<Object> union_of_StringInstance_or_ExpressionLoader = new UnionLoader(new Loader[] { StringInstance, ExpressionLoader });
  public static Loader<Object> union_of_NullInstance_or_BooleanInstance_or_ExpressionLoader = new UnionLoader(new Loader[] { NullInstance, BooleanInstance, ExpressionLoader });
  public static Loader<LoadListingRequirement_class> LoadListingRequirement_class = new EnumLoader(LoadListingRequirement_class.class);
  public static Loader<LoadListingRequirement_class> uri_LoadListingRequirement_class_False_True_None_None = new UriLoader(LoadListingRequirement_class, false, true, null, null);
  public static Loader<Object> union_of_NullInstance_or_IntegerInstance_or_ExpressionLoader = new UnionLoader(new Loader[] { NullInstance, IntegerInstance, ExpressionLoader });
  public static Loader<Object> union_of_NullInstance_or_StringInstance_or_ExpressionLoader_or_array_of_StringInstance = new UnionLoader(new Loader[] { NullInstance, StringInstance, ExpressionLoader, array_of_StringInstance });
  public static Loader<java.util.Optional<String>> optional_ExpressionLoader = new OptionalLoader(ExpressionLoader);
  public static Loader<java.util.Optional<CommandLineBinding>> optional_CommandLineBinding = new OptionalLoader(CommandLineBinding);
  public static Loader<Object> union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance = new UnionLoader(new Loader[] { CWLType, CommandInputRecordSchema, CommandInputEnumSchema, CommandInputArraySchema, StringInstance });
  public static Loader<java.util.List<Object>> array_of_union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance = new ArrayLoader(union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance);
  public static Loader<Object> union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance = new UnionLoader(new Loader[] { CWLType, CommandInputRecordSchema, CommandInputEnumSchema, CommandInputArraySchema, StringInstance, array_of_union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance });
  public static Loader<Object> typedsl_union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance_2 = new TypeDslLoader(union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance, 2);
  public static Loader<java.util.List<CommandInputRecordField>> array_of_CommandInputRecordField = new ArrayLoader(CommandInputRecordField);
  public static Loader<java.util.Optional<java.util.List<Object>>> optional_array_of_CommandInputRecordField = new OptionalLoader(array_of_CommandInputRecordField);
  public static Loader<java.util.Optional<java.util.List<Object>>> idmap_fields_optional_array_of_CommandInputRecordField = new IdMapLoader(optional_array_of_CommandInputRecordField, "name", "type");
  public static Loader<Object> uri_union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance_False_True_2_None = new UriLoader(union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance, false, true, 2, null);
  public static Loader<Object> union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance = new UnionLoader(new Loader[] { CWLType, CommandOutputRecordSchema, CommandOutputEnumSchema, CommandOutputArraySchema, StringInstance });
  public static Loader<java.util.List<Object>> array_of_union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance = new ArrayLoader(union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance);
  public static Loader<Object> union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance = new UnionLoader(new Loader[] { CWLType, CommandOutputRecordSchema, CommandOutputEnumSchema, CommandOutputArraySchema, StringInstance, array_of_union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance });
  public static Loader<Object> typedsl_union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance_2 = new TypeDslLoader(union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance, 2);
  public static Loader<java.util.Optional<CommandOutputBinding>> optional_CommandOutputBinding = new OptionalLoader(CommandOutputBinding);
  public static Loader<java.util.List<CommandOutputRecordField>> array_of_CommandOutputRecordField = new ArrayLoader(CommandOutputRecordField);
  public static Loader<java.util.Optional<java.util.List<Object>>> optional_array_of_CommandOutputRecordField = new OptionalLoader(array_of_CommandOutputRecordField);
  public static Loader<java.util.Optional<java.util.List<Object>>> idmap_fields_optional_array_of_CommandOutputRecordField = new IdMapLoader(optional_array_of_CommandOutputRecordField, "name", "type");
  public static Loader<Object> uri_union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance_False_True_2_None = new UriLoader(union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance, false, true, 2, null);
  public static Loader<Object> union_of_CWLType_or_stdin_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance = new UnionLoader(new Loader[] { CWLType, stdin, CommandInputRecordSchema, CommandInputEnumSchema, CommandInputArraySchema, StringInstance, array_of_union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance });
  public static Loader<Object> typedsl_union_of_CWLType_or_stdin_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance_2 = new TypeDslLoader(union_of_CWLType_or_stdin_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance, 2);
  public static Loader<Object> union_of_CWLType_or_stdout_or_stderr_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance = new UnionLoader(new Loader[] { CWLType, stdout, stderr, CommandOutputRecordSchema, CommandOutputEnumSchema, CommandOutputArraySchema, StringInstance, array_of_union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance });
  public static Loader<Object> typedsl_union_of_CWLType_or_stdout_or_stderr_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance_2 = new TypeDslLoader(union_of_CWLType_or_stdout_or_stderr_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance, 2);
  public static Loader<CommandLineTool_class> CommandLineTool_class = new EnumLoader(CommandLineTool_class.class);
  public static Loader<CommandLineTool_class> uri_CommandLineTool_class_False_True_None_None = new UriLoader(CommandLineTool_class, false, true, null, null);
  public static Loader<java.util.List<CommandInputParameter>> array_of_CommandInputParameter = new ArrayLoader(CommandInputParameter);
  public static Loader<java.util.List<Object>> idmap_inputs_array_of_CommandInputParameter = new IdMapLoader(array_of_CommandInputParameter, "id", "type");
  public static Loader<java.util.List<CommandOutputParameter>> array_of_CommandOutputParameter = new ArrayLoader(CommandOutputParameter);
  public static Loader<java.util.List<Object>> idmap_outputs_array_of_CommandOutputParameter = new IdMapLoader(array_of_CommandOutputParameter, "id", "type");
  public static Loader<Object> union_of_StringInstance_or_ExpressionLoader_or_CommandLineBinding = new UnionLoader(new Loader[] { StringInstance, ExpressionLoader, CommandLineBinding });
  public static Loader<java.util.List<Object>> array_of_union_of_StringInstance_or_ExpressionLoader_or_CommandLineBinding = new ArrayLoader(union_of_StringInstance_or_ExpressionLoader_or_CommandLineBinding);
  public static Loader<java.util.Optional<java.util.List<Object>>> optional_array_of_union_of_StringInstance_or_ExpressionLoader_or_CommandLineBinding = new OptionalLoader(array_of_union_of_StringInstance_or_ExpressionLoader_or_CommandLineBinding);
  public static Loader<java.util.List<Integer>> array_of_IntegerInstance = new ArrayLoader(IntegerInstance);
  public static Loader<java.util.Optional<java.util.List<Object>>> optional_array_of_IntegerInstance = new OptionalLoader(array_of_IntegerInstance);
  public static Loader<DockerRequirement_class> DockerRequirement_class = new EnumLoader(DockerRequirement_class.class);
  public static Loader<DockerRequirement_class> uri_DockerRequirement_class_False_True_None_None = new UriLoader(DockerRequirement_class, false, true, null, null);
  public static Loader<SoftwareRequirement_class> SoftwareRequirement_class = new EnumLoader(SoftwareRequirement_class.class);
  public static Loader<SoftwareRequirement_class> uri_SoftwareRequirement_class_False_True_None_None = new UriLoader(SoftwareRequirement_class, false, true, null, null);
  public static Loader<java.util.List<SoftwarePackage>> array_of_SoftwarePackage = new ArrayLoader(SoftwarePackage);
  public static Loader<java.util.List<Object>> idmap_packages_array_of_SoftwarePackage = new IdMapLoader(array_of_SoftwarePackage, "package", "specs");
  public static Loader<java.util.Optional<java.util.List<String>>> uri_optional_array_of_StringInstance_False_False_None_True = new UriLoader(optional_array_of_StringInstance, false, false, null, true);
  public static Loader<InitialWorkDirRequirement_class> InitialWorkDirRequirement_class = new EnumLoader(InitialWorkDirRequirement_class.class);
  public static Loader<InitialWorkDirRequirement_class> uri_InitialWorkDirRequirement_class_False_True_None_None = new UriLoader(InitialWorkDirRequirement_class, false, true, null, null);
  public static Loader<Object> union_of_NullInstance_or_Dirent_or_ExpressionLoader_or_File_or_Directory_or_array_of_union_of_File_or_Directory = new UnionLoader(new Loader[] { NullInstance, Dirent, ExpressionLoader, File, Directory, array_of_union_of_File_or_Directory });
  public static Loader<java.util.List<Object>> array_of_union_of_NullInstance_or_Dirent_or_ExpressionLoader_or_File_or_Directory_or_array_of_union_of_File_or_Directory = new ArrayLoader(union_of_NullInstance_or_Dirent_or_ExpressionLoader_or_File_or_Directory_or_array_of_union_of_File_or_Directory);
  public static Loader<Object> union_of_ExpressionLoader_or_array_of_union_of_NullInstance_or_Dirent_or_ExpressionLoader_or_File_or_Directory_or_array_of_union_of_File_or_Directory = new UnionLoader(new Loader[] { ExpressionLoader, array_of_union_of_NullInstance_or_Dirent_or_ExpressionLoader_or_File_or_Directory_or_array_of_union_of_File_or_Directory });
  public static Loader<EnvVarRequirement_class> EnvVarRequirement_class = new EnumLoader(EnvVarRequirement_class.class);
  public static Loader<EnvVarRequirement_class> uri_EnvVarRequirement_class_False_True_None_None = new UriLoader(EnvVarRequirement_class, false, true, null, null);
  public static Loader<java.util.List<EnvironmentDef>> array_of_EnvironmentDef = new ArrayLoader(EnvironmentDef);
  public static Loader<java.util.List<Object>> idmap_envDef_array_of_EnvironmentDef = new IdMapLoader(array_of_EnvironmentDef, "envName", "envValue");
  public static Loader<ShellCommandRequirement_class> ShellCommandRequirement_class = new EnumLoader(ShellCommandRequirement_class.class);
  public static Loader<ShellCommandRequirement_class> uri_ShellCommandRequirement_class_False_True_None_None = new UriLoader(ShellCommandRequirement_class, false, true, null, null);
  public static Loader<ResourceRequirement_class> ResourceRequirement_class = new EnumLoader(ResourceRequirement_class.class);
  public static Loader<ResourceRequirement_class> uri_ResourceRequirement_class_False_True_None_None = new UriLoader(ResourceRequirement_class, false, true, null, null);
  public static Loader<Object> union_of_NullInstance_or_IntegerInstance_or_LongInstance_or_DoubleInstance_or_ExpressionLoader = new UnionLoader(new Loader[] { NullInstance, IntegerInstance, LongInstance, DoubleInstance, ExpressionLoader });
  public static Loader<WorkReuse_class> WorkReuse_class = new EnumLoader(WorkReuse_class.class);
  public static Loader<WorkReuse_class> uri_WorkReuse_class_False_True_None_None = new UriLoader(WorkReuse_class, false, true, null, null);
  public static Loader<Object> union_of_BooleanInstance_or_ExpressionLoader = new UnionLoader(new Loader[] { BooleanInstance, ExpressionLoader });
  public static Loader<NetworkAccess_class> NetworkAccess_class = new EnumLoader(NetworkAccess_class.class);
  public static Loader<NetworkAccess_class> uri_NetworkAccess_class_False_True_None_None = new UriLoader(NetworkAccess_class, false, true, null, null);
  public static Loader<InplaceUpdateRequirement_class> InplaceUpdateRequirement_class = new EnumLoader(InplaceUpdateRequirement_class.class);
  public static Loader<InplaceUpdateRequirement_class> uri_InplaceUpdateRequirement_class_False_True_None_None = new UriLoader(InplaceUpdateRequirement_class, false, true, null, null);
  public static Loader<ToolTimeLimit_class> ToolTimeLimit_class = new EnumLoader(ToolTimeLimit_class.class);
  public static Loader<ToolTimeLimit_class> uri_ToolTimeLimit_class_False_True_None_None = new UriLoader(ToolTimeLimit_class, false, true, null, null);
  public static Loader<Object> union_of_IntegerInstance_or_LongInstance_or_ExpressionLoader = new UnionLoader(new Loader[] { IntegerInstance, LongInstance, ExpressionLoader });
  public static Loader<java.util.Optional<InputBinding>> optional_InputBinding = new OptionalLoader(InputBinding);
  public static Loader<ExpressionTool_class> ExpressionTool_class = new EnumLoader(ExpressionTool_class.class);
  public static Loader<ExpressionTool_class> uri_ExpressionTool_class_False_True_None_None = new UriLoader(ExpressionTool_class, false, true, null, null);
  public static Loader<java.util.List<WorkflowInputParameter>> array_of_WorkflowInputParameter = new ArrayLoader(WorkflowInputParameter);
  public static Loader<java.util.List<Object>> idmap_inputs_array_of_WorkflowInputParameter = new IdMapLoader(array_of_WorkflowInputParameter, "id", "type");
  public static Loader<java.util.List<ExpressionToolOutputParameter>> array_of_ExpressionToolOutputParameter = new ArrayLoader(ExpressionToolOutputParameter);
  public static Loader<java.util.List<Object>> idmap_outputs_array_of_ExpressionToolOutputParameter = new IdMapLoader(array_of_ExpressionToolOutputParameter, "id", "type");
  public static Loader<Object> uri_union_of_NullInstance_or_StringInstance_or_array_of_StringInstance_False_False_1_None = new UriLoader(union_of_NullInstance_or_StringInstance_or_array_of_StringInstance, false, false, 1, null);
  public static Loader<java.util.Optional<LinkMergeMethod>> optional_LinkMergeMethod = new OptionalLoader(LinkMergeMethod);
  public static Loader<java.util.Optional<PickValueMethod>> optional_PickValueMethod = new OptionalLoader(PickValueMethod);
  public static Loader<Object> uri_union_of_NullInstance_or_StringInstance_or_array_of_StringInstance_False_False_2_None = new UriLoader(union_of_NullInstance_or_StringInstance_or_array_of_StringInstance, false, false, 2, null);
  public static Loader<java.util.List<WorkflowStepInput>> array_of_WorkflowStepInput = new ArrayLoader(WorkflowStepInput);
  public static Loader<java.util.List<Object>> idmap_in_array_of_WorkflowStepInput = new IdMapLoader(array_of_WorkflowStepInput, "id", "source");
  public static Loader<Object> union_of_StringInstance_or_WorkflowStepOutput = new UnionLoader(new Loader[] { StringInstance, WorkflowStepOutput });
  public static Loader<java.util.List<Object>> array_of_union_of_StringInstance_or_WorkflowStepOutput = new ArrayLoader(union_of_StringInstance_or_WorkflowStepOutput);
  public static Loader<java.util.List<Object>> uri_array_of_union_of_StringInstance_or_WorkflowStepOutput_True_False_None_None = new UriLoader(array_of_union_of_StringInstance_or_WorkflowStepOutput, true, false, null, null);
  public static Loader<java.util.List<Object>> array_of_AnyInstance = new ArrayLoader(AnyInstance);
  public static Loader<java.util.Optional<java.util.List<Object>>> optional_array_of_AnyInstance = new OptionalLoader(array_of_AnyInstance);
  public static Loader<java.util.Optional<java.util.List<Object>>> idmap_hints_optional_array_of_AnyInstance = new IdMapLoader(optional_array_of_AnyInstance, "class", "None");
  public static Loader<Object> union_of_StringInstance_or_CommandLineTool_or_ExpressionTool_or_Workflow_or_Operation = new UnionLoader(new Loader[] { StringInstance, CommandLineTool, ExpressionTool, Workflow, Operation });
  public static Loader<Object> uri_union_of_StringInstance_or_CommandLineTool_or_ExpressionTool_or_Workflow_or_Operation_False_False_None_None = new UriLoader(union_of_StringInstance_or_CommandLineTool_or_ExpressionTool_or_Workflow_or_Operation, false, false, null, null);
  public static Loader<Object> uri_union_of_NullInstance_or_StringInstance_or_array_of_StringInstance_False_False_0_None = new UriLoader(union_of_NullInstance_or_StringInstance_or_array_of_StringInstance, false, false, 0, null);
  public static Loader<java.util.Optional<ScatterMethod>> optional_ScatterMethod = new OptionalLoader(ScatterMethod);
  public static Loader<java.util.Optional<ScatterMethod>> uri_optional_ScatterMethod_False_True_None_None = new UriLoader(optional_ScatterMethod, false, true, null, null);
  public static Loader<Workflow_class> Workflow_class = new EnumLoader(Workflow_class.class);
  public static Loader<Workflow_class> uri_Workflow_class_False_True_None_None = new UriLoader(Workflow_class, false, true, null, null);
  public static Loader<java.util.List<WorkflowOutputParameter>> array_of_WorkflowOutputParameter = new ArrayLoader(WorkflowOutputParameter);
  public static Loader<java.util.List<Object>> idmap_outputs_array_of_WorkflowOutputParameter = new IdMapLoader(array_of_WorkflowOutputParameter, "id", "type");
  public static Loader<java.util.List<WorkflowStep>> array_of_WorkflowStep = new ArrayLoader(WorkflowStep);
  public static Loader<java.util.List<Object>> idmap_steps_array_of_WorkflowStep = new IdMapLoader(array_of_WorkflowStep, "id", "None");
  public static Loader<SubworkflowFeatureRequirement_class> SubworkflowFeatureRequirement_class = new EnumLoader(SubworkflowFeatureRequirement_class.class);
  public static Loader<SubworkflowFeatureRequirement_class> uri_SubworkflowFeatureRequirement_class_False_True_None_None = new UriLoader(SubworkflowFeatureRequirement_class, false, true, null, null);
  public static Loader<ScatterFeatureRequirement_class> ScatterFeatureRequirement_class = new EnumLoader(ScatterFeatureRequirement_class.class);
  public static Loader<ScatterFeatureRequirement_class> uri_ScatterFeatureRequirement_class_False_True_None_None = new UriLoader(ScatterFeatureRequirement_class, false, true, null, null);
  public static Loader<MultipleInputFeatureRequirement_class> MultipleInputFeatureRequirement_class = new EnumLoader(MultipleInputFeatureRequirement_class.class);
  public static Loader<MultipleInputFeatureRequirement_class> uri_MultipleInputFeatureRequirement_class_False_True_None_None = new UriLoader(MultipleInputFeatureRequirement_class, false, true, null, null);
  public static Loader<StepInputExpressionRequirement_class> StepInputExpressionRequirement_class = new EnumLoader(StepInputExpressionRequirement_class.class);
  public static Loader<StepInputExpressionRequirement_class> uri_StepInputExpressionRequirement_class_False_True_None_None = new UriLoader(StepInputExpressionRequirement_class, false, true, null, null);
  public static Loader<Operation_class> Operation_class = new EnumLoader(Operation_class.class);
  public static Loader<Operation_class> uri_Operation_class_False_True_None_None = new UriLoader(Operation_class, false, true, null, null);
  public static Loader<java.util.List<OperationInputParameter>> array_of_OperationInputParameter = new ArrayLoader(OperationInputParameter);
  public static Loader<java.util.List<Object>> idmap_inputs_array_of_OperationInputParameter = new IdMapLoader(array_of_OperationInputParameter, "id", "type");
  public static Loader<java.util.List<OperationOutputParameter>> array_of_OperationOutputParameter = new ArrayLoader(OperationOutputParameter);
  public static Loader<java.util.List<Object>> idmap_outputs_array_of_OperationOutputParameter = new IdMapLoader(array_of_OperationOutputParameter, "id", "type");
  public static Loader<Object> union_of_CommandLineTool_or_ExpressionTool_or_Workflow_or_Operation = new UnionLoader(new Loader[] { CommandLineTool, ExpressionTool, Workflow, Operation });
  public static Loader<java.util.List<Object>> array_of_union_of_CommandLineTool_or_ExpressionTool_or_Workflow_or_Operation = new ArrayLoader(union_of_CommandLineTool_or_ExpressionTool_or_Workflow_or_Operation);
  public static Loader<Object> union_of_CommandLineTool_or_ExpressionTool_or_Workflow_or_Operation_or_array_of_union_of_CommandLineTool_or_ExpressionTool_or_Workflow_or_Operation = new UnionLoader(new Loader[] { CommandLineTool, ExpressionTool, Workflow, Operation, array_of_union_of_CommandLineTool_or_ExpressionTool_or_Workflow_or_Operation });

}
