package org.w3id.cwl.cwl1_1.utils;

import java.util.List;
import org.w3id.cwl.cwl1_1.*;

public class LoaderInstances {
  public static Loader<String> StringInstance = new PrimitiveLoader<String>(String.class);
  public static Loader<Integer> IntegerInstance = new PrimitiveLoader<Integer>(Integer.class);
  public static Loader<Long> LongInstance = new PrimitiveLoader<Long>(Long.class);
  public static Loader<Double> DoubleInstance = new PrimitiveLoader<Double>(Double.class);
  public static Loader<Boolean> BooleanInstance = new PrimitiveLoader<Boolean>(Boolean.class);
  public static Loader<Object> NullInstance = new NullLoader();
  public static Loader<Object> AnyInstance = new AnyLoader();
  public static Loader<org.w3id.cwl.cwl1_1.Documented> Documented = new RecordLoader<org.w3id.cwl.cwl1_1.Documented>(org.w3id.cwl.cwl1_1.Documented.class);
  public static Loader<PrimitiveType> PrimitiveType = new EnumLoader(PrimitiveType.class);
  public static Loader<Any> Any = new EnumLoader(Any.class);
  public static Loader<org.w3id.cwl.cwl1_1.RecordField> RecordField = new RecordLoader<org.w3id.cwl.cwl1_1.RecordField>(org.w3id.cwl.cwl1_1.RecordFieldImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.RecordSchema> RecordSchema = new RecordLoader<org.w3id.cwl.cwl1_1.RecordSchema>(org.w3id.cwl.cwl1_1.RecordSchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.EnumSchema> EnumSchema = new RecordLoader<org.w3id.cwl.cwl1_1.EnumSchema>(org.w3id.cwl.cwl1_1.EnumSchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.ArraySchema> ArraySchema = new RecordLoader<org.w3id.cwl.cwl1_1.ArraySchema>(org.w3id.cwl.cwl1_1.ArraySchemaImpl.class);
  public static Loader<CWLVersion> CWLVersion = new EnumLoader(CWLVersion.class);
  public static Loader<CWLType> CWLType = new EnumLoader(CWLType.class);
  public static Loader<org.w3id.cwl.cwl1_1.File> File = new RecordLoader<org.w3id.cwl.cwl1_1.File>(org.w3id.cwl.cwl1_1.FileImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.Directory> Directory = new RecordLoader<org.w3id.cwl.cwl1_1.Directory>(org.w3id.cwl.cwl1_1.DirectoryImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.Labeled> Labeled = new RecordLoader<org.w3id.cwl.cwl1_1.Labeled>(org.w3id.cwl.cwl1_1.Labeled.class);
  public static Loader<org.w3id.cwl.cwl1_1.Identified> Identified = new RecordLoader<org.w3id.cwl.cwl1_1.Identified>(org.w3id.cwl.cwl1_1.Identified.class);
  public static Loader<LoadListingEnum> LoadListingEnum = new EnumLoader(LoadListingEnum.class);
  public static Loader<org.w3id.cwl.cwl1_1.LoadContents> LoadContents = new RecordLoader<org.w3id.cwl.cwl1_1.LoadContents>(org.w3id.cwl.cwl1_1.LoadContents.class);
  public static Loader<org.w3id.cwl.cwl1_1.FieldBase> FieldBase = new RecordLoader<org.w3id.cwl.cwl1_1.FieldBase>(org.w3id.cwl.cwl1_1.FieldBase.class);
  public static Loader<org.w3id.cwl.cwl1_1.InputFormat> InputFormat = new RecordLoader<org.w3id.cwl.cwl1_1.InputFormat>(org.w3id.cwl.cwl1_1.InputFormat.class);
  public static Loader<org.w3id.cwl.cwl1_1.OutputFormat> OutputFormat = new RecordLoader<org.w3id.cwl.cwl1_1.OutputFormat>(org.w3id.cwl.cwl1_1.OutputFormat.class);
  public static Loader<org.w3id.cwl.cwl1_1.Parameter> Parameter = new RecordLoader<org.w3id.cwl.cwl1_1.Parameter>(org.w3id.cwl.cwl1_1.Parameter.class);
  public static Loader<Expression> Expression = new EnumLoader(Expression.class);
  public static Loader<org.w3id.cwl.cwl1_1.InputBinding> InputBinding = new RecordLoader<org.w3id.cwl.cwl1_1.InputBinding>(org.w3id.cwl.cwl1_1.InputBindingImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.IOSchema> IOSchema = new RecordLoader<org.w3id.cwl.cwl1_1.IOSchema>(org.w3id.cwl.cwl1_1.IOSchema.class);
  public static Loader<org.w3id.cwl.cwl1_1.InputSchema> InputSchema = new RecordLoader<org.w3id.cwl.cwl1_1.InputSchema>(org.w3id.cwl.cwl1_1.InputSchema.class);
  public static Loader<org.w3id.cwl.cwl1_1.OutputSchema> OutputSchema = new RecordLoader<org.w3id.cwl.cwl1_1.OutputSchema>(org.w3id.cwl.cwl1_1.OutputSchema.class);
  public static Loader<org.w3id.cwl.cwl1_1.InputRecordField> InputRecordField = new RecordLoader<org.w3id.cwl.cwl1_1.InputRecordField>(org.w3id.cwl.cwl1_1.InputRecordFieldImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.InputRecordSchema> InputRecordSchema = new RecordLoader<org.w3id.cwl.cwl1_1.InputRecordSchema>(org.w3id.cwl.cwl1_1.InputRecordSchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.InputEnumSchema> InputEnumSchema = new RecordLoader<org.w3id.cwl.cwl1_1.InputEnumSchema>(org.w3id.cwl.cwl1_1.InputEnumSchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.InputArraySchema> InputArraySchema = new RecordLoader<org.w3id.cwl.cwl1_1.InputArraySchema>(org.w3id.cwl.cwl1_1.InputArraySchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.OutputRecordField> OutputRecordField = new RecordLoader<org.w3id.cwl.cwl1_1.OutputRecordField>(org.w3id.cwl.cwl1_1.OutputRecordFieldImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.OutputRecordSchema> OutputRecordSchema = new RecordLoader<org.w3id.cwl.cwl1_1.OutputRecordSchema>(org.w3id.cwl.cwl1_1.OutputRecordSchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.OutputEnumSchema> OutputEnumSchema = new RecordLoader<org.w3id.cwl.cwl1_1.OutputEnumSchema>(org.w3id.cwl.cwl1_1.OutputEnumSchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.OutputArraySchema> OutputArraySchema = new RecordLoader<org.w3id.cwl.cwl1_1.OutputArraySchema>(org.w3id.cwl.cwl1_1.OutputArraySchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.InputParameter> InputParameter = new RecordLoader<org.w3id.cwl.cwl1_1.InputParameter>(org.w3id.cwl.cwl1_1.InputParameter.class);
  public static Loader<org.w3id.cwl.cwl1_1.OutputParameter> OutputParameter = new RecordLoader<org.w3id.cwl.cwl1_1.OutputParameter>(org.w3id.cwl.cwl1_1.OutputParameter.class);
  public static Loader<org.w3id.cwl.cwl1_1.ProcessRequirement> ProcessRequirement = new RecordLoader<org.w3id.cwl.cwl1_1.ProcessRequirement>(org.w3id.cwl.cwl1_1.ProcessRequirement.class);
  public static Loader<org.w3id.cwl.cwl1_1.Process> Process = new RecordLoader<org.w3id.cwl.cwl1_1.Process>(org.w3id.cwl.cwl1_1.Process.class);
  public static Loader<org.w3id.cwl.cwl1_1.InlineJavascriptRequirement> InlineJavascriptRequirement = new RecordLoader<org.w3id.cwl.cwl1_1.InlineJavascriptRequirement>(org.w3id.cwl.cwl1_1.InlineJavascriptRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.CommandInputSchema> CommandInputSchema = new RecordLoader<org.w3id.cwl.cwl1_1.CommandInputSchema>(org.w3id.cwl.cwl1_1.CommandInputSchema.class);
  public static Loader<org.w3id.cwl.cwl1_1.SchemaDefRequirement> SchemaDefRequirement = new RecordLoader<org.w3id.cwl.cwl1_1.SchemaDefRequirement>(org.w3id.cwl.cwl1_1.SchemaDefRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.SecondaryFileSchema> SecondaryFileSchema = new RecordLoader<org.w3id.cwl.cwl1_1.SecondaryFileSchema>(org.w3id.cwl.cwl1_1.SecondaryFileSchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.LoadListingRequirement> LoadListingRequirement = new RecordLoader<org.w3id.cwl.cwl1_1.LoadListingRequirement>(org.w3id.cwl.cwl1_1.LoadListingRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.EnvironmentDef> EnvironmentDef = new RecordLoader<org.w3id.cwl.cwl1_1.EnvironmentDef>(org.w3id.cwl.cwl1_1.EnvironmentDefImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.CommandLineBinding> CommandLineBinding = new RecordLoader<org.w3id.cwl.cwl1_1.CommandLineBinding>(org.w3id.cwl.cwl1_1.CommandLineBindingImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.CommandOutputBinding> CommandOutputBinding = new RecordLoader<org.w3id.cwl.cwl1_1.CommandOutputBinding>(org.w3id.cwl.cwl1_1.CommandOutputBindingImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.CommandLineBindable> CommandLineBindable = new RecordLoader<org.w3id.cwl.cwl1_1.CommandLineBindable>(org.w3id.cwl.cwl1_1.CommandLineBindableImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.CommandInputRecordField> CommandInputRecordField = new RecordLoader<org.w3id.cwl.cwl1_1.CommandInputRecordField>(org.w3id.cwl.cwl1_1.CommandInputRecordFieldImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.CommandInputRecordSchema> CommandInputRecordSchema = new RecordLoader<org.w3id.cwl.cwl1_1.CommandInputRecordSchema>(org.w3id.cwl.cwl1_1.CommandInputRecordSchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.CommandInputEnumSchema> CommandInputEnumSchema = new RecordLoader<org.w3id.cwl.cwl1_1.CommandInputEnumSchema>(org.w3id.cwl.cwl1_1.CommandInputEnumSchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.CommandInputArraySchema> CommandInputArraySchema = new RecordLoader<org.w3id.cwl.cwl1_1.CommandInputArraySchema>(org.w3id.cwl.cwl1_1.CommandInputArraySchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.CommandOutputRecordField> CommandOutputRecordField = new RecordLoader<org.w3id.cwl.cwl1_1.CommandOutputRecordField>(org.w3id.cwl.cwl1_1.CommandOutputRecordFieldImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.CommandOutputRecordSchema> CommandOutputRecordSchema = new RecordLoader<org.w3id.cwl.cwl1_1.CommandOutputRecordSchema>(org.w3id.cwl.cwl1_1.CommandOutputRecordSchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.CommandOutputEnumSchema> CommandOutputEnumSchema = new RecordLoader<org.w3id.cwl.cwl1_1.CommandOutputEnumSchema>(org.w3id.cwl.cwl1_1.CommandOutputEnumSchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.CommandOutputArraySchema> CommandOutputArraySchema = new RecordLoader<org.w3id.cwl.cwl1_1.CommandOutputArraySchema>(org.w3id.cwl.cwl1_1.CommandOutputArraySchemaImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.CommandInputParameter> CommandInputParameter = new RecordLoader<org.w3id.cwl.cwl1_1.CommandInputParameter>(org.w3id.cwl.cwl1_1.CommandInputParameterImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.CommandOutputParameter> CommandOutputParameter = new RecordLoader<org.w3id.cwl.cwl1_1.CommandOutputParameter>(org.w3id.cwl.cwl1_1.CommandOutputParameterImpl.class);
  public static Loader<stdin> stdin = new EnumLoader(stdin.class);
  public static Loader<stdout> stdout = new EnumLoader(stdout.class);
  public static Loader<stderr> stderr = new EnumLoader(stderr.class);
  public static Loader<org.w3id.cwl.cwl1_1.CommandLineTool> CommandLineTool = new RecordLoader<org.w3id.cwl.cwl1_1.CommandLineTool>(org.w3id.cwl.cwl1_1.CommandLineToolImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.DockerRequirement> DockerRequirement = new RecordLoader<org.w3id.cwl.cwl1_1.DockerRequirement>(org.w3id.cwl.cwl1_1.DockerRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.SoftwareRequirement> SoftwareRequirement = new RecordLoader<org.w3id.cwl.cwl1_1.SoftwareRequirement>(org.w3id.cwl.cwl1_1.SoftwareRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.SoftwarePackage> SoftwarePackage = new RecordLoader<org.w3id.cwl.cwl1_1.SoftwarePackage>(org.w3id.cwl.cwl1_1.SoftwarePackageImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.Dirent> Dirent = new RecordLoader<org.w3id.cwl.cwl1_1.Dirent>(org.w3id.cwl.cwl1_1.DirentImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.InitialWorkDirRequirement> InitialWorkDirRequirement = new RecordLoader<org.w3id.cwl.cwl1_1.InitialWorkDirRequirement>(org.w3id.cwl.cwl1_1.InitialWorkDirRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.EnvVarRequirement> EnvVarRequirement = new RecordLoader<org.w3id.cwl.cwl1_1.EnvVarRequirement>(org.w3id.cwl.cwl1_1.EnvVarRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.ShellCommandRequirement> ShellCommandRequirement = new RecordLoader<org.w3id.cwl.cwl1_1.ShellCommandRequirement>(org.w3id.cwl.cwl1_1.ShellCommandRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.ResourceRequirement> ResourceRequirement = new RecordLoader<org.w3id.cwl.cwl1_1.ResourceRequirement>(org.w3id.cwl.cwl1_1.ResourceRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.WorkReuse> WorkReuse = new RecordLoader<org.w3id.cwl.cwl1_1.WorkReuse>(org.w3id.cwl.cwl1_1.WorkReuseImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.NetworkAccess> NetworkAccess = new RecordLoader<org.w3id.cwl.cwl1_1.NetworkAccess>(org.w3id.cwl.cwl1_1.NetworkAccessImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.InplaceUpdateRequirement> InplaceUpdateRequirement = new RecordLoader<org.w3id.cwl.cwl1_1.InplaceUpdateRequirement>(org.w3id.cwl.cwl1_1.InplaceUpdateRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.ToolTimeLimit> ToolTimeLimit = new RecordLoader<org.w3id.cwl.cwl1_1.ToolTimeLimit>(org.w3id.cwl.cwl1_1.ToolTimeLimitImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.ExpressionToolOutputParameter> ExpressionToolOutputParameter = new RecordLoader<org.w3id.cwl.cwl1_1.ExpressionToolOutputParameter>(org.w3id.cwl.cwl1_1.ExpressionToolOutputParameterImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.WorkflowInputParameter> WorkflowInputParameter = new RecordLoader<org.w3id.cwl.cwl1_1.WorkflowInputParameter>(org.w3id.cwl.cwl1_1.WorkflowInputParameterImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.ExpressionTool> ExpressionTool = new RecordLoader<org.w3id.cwl.cwl1_1.ExpressionTool>(org.w3id.cwl.cwl1_1.ExpressionToolImpl.class);
  public static Loader<LinkMergeMethod> LinkMergeMethod = new EnumLoader(LinkMergeMethod.class);
  public static Loader<org.w3id.cwl.cwl1_1.WorkflowOutputParameter> WorkflowOutputParameter = new RecordLoader<org.w3id.cwl.cwl1_1.WorkflowOutputParameter>(org.w3id.cwl.cwl1_1.WorkflowOutputParameterImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.Sink> Sink = new RecordLoader<org.w3id.cwl.cwl1_1.Sink>(org.w3id.cwl.cwl1_1.Sink.class);
  public static Loader<org.w3id.cwl.cwl1_1.WorkflowStepInput> WorkflowStepInput = new RecordLoader<org.w3id.cwl.cwl1_1.WorkflowStepInput>(org.w3id.cwl.cwl1_1.WorkflowStepInputImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.WorkflowStepOutput> WorkflowStepOutput = new RecordLoader<org.w3id.cwl.cwl1_1.WorkflowStepOutput>(org.w3id.cwl.cwl1_1.WorkflowStepOutputImpl.class);
  public static Loader<ScatterMethod> ScatterMethod = new EnumLoader(ScatterMethod.class);
  public static Loader<org.w3id.cwl.cwl1_1.WorkflowStep> WorkflowStep = new RecordLoader<org.w3id.cwl.cwl1_1.WorkflowStep>(org.w3id.cwl.cwl1_1.WorkflowStepImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.Workflow> Workflow = new RecordLoader<org.w3id.cwl.cwl1_1.Workflow>(org.w3id.cwl.cwl1_1.WorkflowImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.SubworkflowFeatureRequirement> SubworkflowFeatureRequirement = new RecordLoader<org.w3id.cwl.cwl1_1.SubworkflowFeatureRequirement>(org.w3id.cwl.cwl1_1.SubworkflowFeatureRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.ScatterFeatureRequirement> ScatterFeatureRequirement = new RecordLoader<org.w3id.cwl.cwl1_1.ScatterFeatureRequirement>(org.w3id.cwl.cwl1_1.ScatterFeatureRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.MultipleInputFeatureRequirement> MultipleInputFeatureRequirement = new RecordLoader<org.w3id.cwl.cwl1_1.MultipleInputFeatureRequirement>(org.w3id.cwl.cwl1_1.MultipleInputFeatureRequirementImpl.class);
  public static Loader<org.w3id.cwl.cwl1_1.StepInputExpressionRequirement> StepInputExpressionRequirement = new RecordLoader<org.w3id.cwl.cwl1_1.StepInputExpressionRequirement>(org.w3id.cwl.cwl1_1.StepInputExpressionRequirementImpl.class);
  public static Loader<java.util.List<String>> array_of_StringInstance = new ArrayLoader(StringInstance);
  public static Loader<Object> union_of_NullInstance_or_StringInstance_or_array_of_StringInstance = new UnionLoader(new Loader[] { NullInstance, StringInstance, array_of_StringInstance });
  public static Loader<String> uri_StringInstance_True_False_None = new UriLoader(StringInstance, true, false, null);
  public static Loader<Object> union_of_PrimitiveType_or_RecordSchema_or_EnumSchema_or_ArraySchema_or_StringInstance = new UnionLoader(new Loader[] { PrimitiveType, RecordSchema, EnumSchema, ArraySchema, StringInstance });
  public static Loader<java.util.List<Object>> array_of_union_of_PrimitiveType_or_RecordSchema_or_EnumSchema_or_ArraySchema_or_StringInstance = new ArrayLoader(union_of_PrimitiveType_or_RecordSchema_or_EnumSchema_or_ArraySchema_or_StringInstance);
  public static Loader<Object> union_of_PrimitiveType_or_RecordSchema_or_EnumSchema_or_ArraySchema_or_StringInstance_or_array_of_union_of_PrimitiveType_or_RecordSchema_or_EnumSchema_or_ArraySchema_or_StringInstance = new UnionLoader(new Loader[] { PrimitiveType, RecordSchema, EnumSchema, ArraySchema, StringInstance, array_of_union_of_PrimitiveType_or_RecordSchema_or_EnumSchema_or_ArraySchema_or_StringInstance });
  public static Loader<Object> typedsl_union_of_PrimitiveType_or_RecordSchema_or_EnumSchema_or_ArraySchema_or_StringInstance_or_array_of_union_of_PrimitiveType_or_RecordSchema_or_EnumSchema_or_ArraySchema_or_StringInstance_2 = new TypeDslLoader(union_of_PrimitiveType_or_RecordSchema_or_EnumSchema_or_ArraySchema_or_StringInstance_or_array_of_union_of_PrimitiveType_or_RecordSchema_or_EnumSchema_or_ArraySchema_or_StringInstance, 2);
  public static Loader<java.util.List<RecordField>> array_of_RecordField = new ArrayLoader(RecordField);
  public static Loader<java.util.Optional<java.util.List<Object>>> optional_array_of_RecordField = new OptionalLoader(array_of_RecordField);
  public static Loader<java.util.Optional<java.util.List<Object>>> idmap_fields_optional_array_of_RecordField = new IdMapLoader(optional_array_of_RecordField, "name", "type");
  public static Loader<enum_d9cba076fca539106791a4f46d198c7fcfbdb779> enum_d9cba076fca539106791a4f46d198c7fcfbdb779 = new EnumLoader(enum_d9cba076fca539106791a4f46d198c7fcfbdb779.class);
  public static Loader<enum_d9cba076fca539106791a4f46d198c7fcfbdb779> typedsl_enum_d9cba076fca539106791a4f46d198c7fcfbdb779_2 = new TypeDslLoader(enum_d9cba076fca539106791a4f46d198c7fcfbdb779, 2);
  public static Loader<java.util.List<String>> uri_array_of_StringInstance_True_False_None = new UriLoader(array_of_StringInstance, true, false, null);
  public static Loader<enum_d961d79c225752b9fadb617367615ab176b47d77> enum_d961d79c225752b9fadb617367615ab176b47d77 = new EnumLoader(enum_d961d79c225752b9fadb617367615ab176b47d77.class);
  public static Loader<enum_d961d79c225752b9fadb617367615ab176b47d77> typedsl_enum_d961d79c225752b9fadb617367615ab176b47d77_2 = new TypeDslLoader(enum_d961d79c225752b9fadb617367615ab176b47d77, 2);
  public static Loader<enum_d062602be0b4b8fd33e69e29a841317b6ab665bc> enum_d062602be0b4b8fd33e69e29a841317b6ab665bc = new EnumLoader(enum_d062602be0b4b8fd33e69e29a841317b6ab665bc.class);
  public static Loader<enum_d062602be0b4b8fd33e69e29a841317b6ab665bc> typedsl_enum_d062602be0b4b8fd33e69e29a841317b6ab665bc_2 = new TypeDslLoader(enum_d062602be0b4b8fd33e69e29a841317b6ab665bc, 2);
  public static Loader<File_class> File_class = new EnumLoader(File_class.class);
  public static Loader<File_class> uri_File_class_False_True_None = new UriLoader(File_class, false, true, null);
  public static Loader<java.util.Optional<String>> optional_StringInstance = new OptionalLoader(StringInstance);
  public static Loader<java.util.Optional<String>> uri_optional_StringInstance_False_False_None = new UriLoader(optional_StringInstance, false, false, null);
  public static Loader<Object> union_of_NullInstance_or_IntegerInstance_or_LongInstance = new UnionLoader(new Loader[] { NullInstance, IntegerInstance, LongInstance });
  public static Loader<Object> union_of_File_or_Directory = new UnionLoader(new Loader[] { File, Directory });
  public static Loader<java.util.List<Object>> array_of_union_of_File_or_Directory = new ArrayLoader(union_of_File_or_Directory);
  public static Loader<java.util.Optional<java.util.List<Object>>> optional_array_of_union_of_File_or_Directory = new OptionalLoader(array_of_union_of_File_or_Directory);
  public static Loader<java.util.Optional<java.util.List<Object>>> secondaryfilesdsl_optional_array_of_union_of_File_or_Directory = new SecondaryFilesDslLoader(optional_array_of_union_of_File_or_Directory);
  public static Loader<java.util.Optional<String>> uri_optional_StringInstance_True_False_None = new UriLoader(optional_StringInstance, true, false, null);
  public static Loader<Directory_class> Directory_class = new EnumLoader(Directory_class.class);
  public static Loader<Directory_class> uri_Directory_class_False_True_None = new UriLoader(Directory_class, false, true, null);
  public static Loader<java.util.Optional<Boolean>> optional_BooleanInstance = new OptionalLoader(BooleanInstance);
  public static Loader<java.util.Optional<LoadListingEnum>> optional_LoadListingEnum = new OptionalLoader(LoadListingEnum);
  public static Loader<java.util.List<SecondaryFileSchema>> array_of_SecondaryFileSchema = new ArrayLoader(SecondaryFileSchema);
  public static Loader<Object> union_of_NullInstance_or_SecondaryFileSchema_or_array_of_SecondaryFileSchema = new UnionLoader(new Loader[] { NullInstance, SecondaryFileSchema, array_of_SecondaryFileSchema });
  public static Loader<Object> secondaryfilesdsl_union_of_NullInstance_or_SecondaryFileSchema_or_array_of_SecondaryFileSchema = new SecondaryFilesDslLoader(union_of_NullInstance_or_SecondaryFileSchema_or_array_of_SecondaryFileSchema);
  public static Loader<String> ExpressionLoader = new ExpressionLoader();
  public static Loader<Object> union_of_NullInstance_or_StringInstance_or_array_of_StringInstance_or_ExpressionLoader = new UnionLoader(new Loader[] { NullInstance, StringInstance, array_of_StringInstance, ExpressionLoader });
  public static Loader<Object> uri_union_of_NullInstance_or_StringInstance_or_array_of_StringInstance_or_ExpressionLoader_True_False_None = new UriLoader(union_of_NullInstance_or_StringInstance_or_array_of_StringInstance_or_ExpressionLoader, true, false, null);
  public static Loader<Object> union_of_NullInstance_or_StringInstance_or_ExpressionLoader = new UnionLoader(new Loader[] { NullInstance, StringInstance, ExpressionLoader });
  public static Loader<Object> uri_union_of_NullInstance_or_StringInstance_or_ExpressionLoader_True_False_None = new UriLoader(union_of_NullInstance_or_StringInstance_or_ExpressionLoader, true, false, null);
  public static Loader<Object> union_of_CWLType_or_InputRecordSchema_or_InputEnumSchema_or_InputArraySchema_or_StringInstance = new UnionLoader(new Loader[] { CWLType, InputRecordSchema, InputEnumSchema, InputArraySchema, StringInstance });
  public static Loader<java.util.List<Object>> array_of_union_of_CWLType_or_InputRecordSchema_or_InputEnumSchema_or_InputArraySchema_or_StringInstance = new ArrayLoader(union_of_CWLType_or_InputRecordSchema_or_InputEnumSchema_or_InputArraySchema_or_StringInstance);
  public static Loader<Object> union_of_CWLType_or_InputRecordSchema_or_InputEnumSchema_or_InputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_InputRecordSchema_or_InputEnumSchema_or_InputArraySchema_or_StringInstance = new UnionLoader(new Loader[] { CWLType, InputRecordSchema, InputEnumSchema, InputArraySchema, StringInstance, array_of_union_of_CWLType_or_InputRecordSchema_or_InputEnumSchema_or_InputArraySchema_or_StringInstance });
  public static Loader<Object> typedsl_union_of_CWLType_or_InputRecordSchema_or_InputEnumSchema_or_InputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_InputRecordSchema_or_InputEnumSchema_or_InputArraySchema_or_StringInstance_2 = new TypeDslLoader(union_of_CWLType_or_InputRecordSchema_or_InputEnumSchema_or_InputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_InputRecordSchema_or_InputEnumSchema_or_InputArraySchema_or_StringInstance, 2);
  public static Loader<java.util.List<InputRecordField>> array_of_InputRecordField = new ArrayLoader(InputRecordField);
  public static Loader<java.util.Optional<java.util.List<Object>>> optional_array_of_InputRecordField = new OptionalLoader(array_of_InputRecordField);
  public static Loader<java.util.Optional<java.util.List<Object>>> idmap_fields_optional_array_of_InputRecordField = new IdMapLoader(optional_array_of_InputRecordField, "name", "type");
  public static Loader<Object> union_of_CWLType_or_OutputRecordSchema_or_OutputEnumSchema_or_OutputArraySchema_or_StringInstance = new UnionLoader(new Loader[] { CWLType, OutputRecordSchema, OutputEnumSchema, OutputArraySchema, StringInstance });
  public static Loader<java.util.List<Object>> array_of_union_of_CWLType_or_OutputRecordSchema_or_OutputEnumSchema_or_OutputArraySchema_or_StringInstance = new ArrayLoader(union_of_CWLType_or_OutputRecordSchema_or_OutputEnumSchema_or_OutputArraySchema_or_StringInstance);
  public static Loader<Object> union_of_CWLType_or_OutputRecordSchema_or_OutputEnumSchema_or_OutputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_OutputRecordSchema_or_OutputEnumSchema_or_OutputArraySchema_or_StringInstance = new UnionLoader(new Loader[] { CWLType, OutputRecordSchema, OutputEnumSchema, OutputArraySchema, StringInstance, array_of_union_of_CWLType_or_OutputRecordSchema_or_OutputEnumSchema_or_OutputArraySchema_or_StringInstance });
  public static Loader<Object> typedsl_union_of_CWLType_or_OutputRecordSchema_or_OutputEnumSchema_or_OutputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_OutputRecordSchema_or_OutputEnumSchema_or_OutputArraySchema_or_StringInstance_2 = new TypeDslLoader(union_of_CWLType_or_OutputRecordSchema_or_OutputEnumSchema_or_OutputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_OutputRecordSchema_or_OutputEnumSchema_or_OutputArraySchema_or_StringInstance, 2);
  public static Loader<java.util.List<OutputRecordField>> array_of_OutputRecordField = new ArrayLoader(OutputRecordField);
  public static Loader<java.util.Optional<java.util.List<Object>>> optional_array_of_OutputRecordField = new OptionalLoader(array_of_OutputRecordField);
  public static Loader<java.util.Optional<java.util.List<Object>>> idmap_fields_optional_array_of_OutputRecordField = new IdMapLoader(optional_array_of_OutputRecordField, "name", "type");
  public static Loader<Object> union_of_NullInstance_or_File_or_Directory_or_AnyInstance = new UnionLoader(new Loader[] { NullInstance, File, Directory, AnyInstance });
  public static Loader<Object> union_of_CommandInputParameter_or_WorkflowInputParameter = new UnionLoader(new Loader[] { CommandInputParameter, WorkflowInputParameter });
  public static Loader<java.util.List<Object>> array_of_union_of_CommandInputParameter_or_WorkflowInputParameter = new ArrayLoader(union_of_CommandInputParameter_or_WorkflowInputParameter);
  public static Loader<java.util.List<Object>> idmap_inputs_array_of_union_of_CommandInputParameter_or_WorkflowInputParameter = new IdMapLoader(array_of_union_of_CommandInputParameter_or_WorkflowInputParameter, "id", "type");
  public static Loader<Object> union_of_CommandOutputParameter_or_ExpressionToolOutputParameter_or_WorkflowOutputParameter = new UnionLoader(new Loader[] { CommandOutputParameter, ExpressionToolOutputParameter, WorkflowOutputParameter });
  public static Loader<java.util.List<Object>> array_of_union_of_CommandOutputParameter_or_ExpressionToolOutputParameter_or_WorkflowOutputParameter = new ArrayLoader(union_of_CommandOutputParameter_or_ExpressionToolOutputParameter_or_WorkflowOutputParameter);
  public static Loader<java.util.List<Object>> idmap_outputs_array_of_union_of_CommandOutputParameter_or_ExpressionToolOutputParameter_or_WorkflowOutputParameter = new IdMapLoader(array_of_union_of_CommandOutputParameter_or_ExpressionToolOutputParameter_or_WorkflowOutputParameter, "id", "type");
  public static Loader<Object> union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement = new UnionLoader(new Loader[] { InlineJavascriptRequirement, SchemaDefRequirement, LoadListingRequirement, DockerRequirement, SoftwareRequirement, InitialWorkDirRequirement, EnvVarRequirement, ShellCommandRequirement, ResourceRequirement, WorkReuse, NetworkAccess, InplaceUpdateRequirement, ToolTimeLimit, SubworkflowFeatureRequirement, ScatterFeatureRequirement, MultipleInputFeatureRequirement, StepInputExpressionRequirement });
  public static Loader<java.util.List<Object>> array_of_union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement = new ArrayLoader(union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement);
  public static Loader<java.util.Optional<java.util.List<Object>>> optional_array_of_union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement = new OptionalLoader(array_of_union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement);
  public static Loader<java.util.Optional<java.util.List<Object>>> idmap_requirements_optional_array_of_union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement = new IdMapLoader(optional_array_of_union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement, "class", "None");
  public static Loader<Object> union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement_or_AnyInstance = new UnionLoader(new Loader[] { InlineJavascriptRequirement, SchemaDefRequirement, LoadListingRequirement, DockerRequirement, SoftwareRequirement, InitialWorkDirRequirement, EnvVarRequirement, ShellCommandRequirement, ResourceRequirement, WorkReuse, NetworkAccess, InplaceUpdateRequirement, ToolTimeLimit, SubworkflowFeatureRequirement, ScatterFeatureRequirement, MultipleInputFeatureRequirement, StepInputExpressionRequirement, AnyInstance });
  public static Loader<java.util.List<Object>> array_of_union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement_or_AnyInstance = new ArrayLoader(union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement_or_AnyInstance);
  public static Loader<java.util.Optional<java.util.List<Object>>> optional_array_of_union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement_or_AnyInstance = new OptionalLoader(array_of_union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement_or_AnyInstance);
  public static Loader<java.util.Optional<java.util.List<Object>>> idmap_hints_optional_array_of_union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement_or_AnyInstance = new IdMapLoader(optional_array_of_union_of_InlineJavascriptRequirement_or_SchemaDefRequirement_or_LoadListingRequirement_or_DockerRequirement_or_SoftwareRequirement_or_InitialWorkDirRequirement_or_EnvVarRequirement_or_ShellCommandRequirement_or_ResourceRequirement_or_WorkReuse_or_NetworkAccess_or_InplaceUpdateRequirement_or_ToolTimeLimit_or_SubworkflowFeatureRequirement_or_ScatterFeatureRequirement_or_MultipleInputFeatureRequirement_or_StepInputExpressionRequirement_or_AnyInstance, "class", "None");
  public static Loader<java.util.Optional<CWLVersion>> optional_CWLVersion = new OptionalLoader(CWLVersion);
  public static Loader<java.util.Optional<CWLVersion>> uri_optional_CWLVersion_False_True_None = new UriLoader(optional_CWLVersion, false, true, null);
  public static Loader<InlineJavascriptRequirement_class> InlineJavascriptRequirement_class = new EnumLoader(InlineJavascriptRequirement_class.class);
  public static Loader<InlineJavascriptRequirement_class> uri_InlineJavascriptRequirement_class_False_True_None = new UriLoader(InlineJavascriptRequirement_class, false, true, null);
  public static Loader<java.util.Optional<java.util.List<String>>> optional_array_of_StringInstance = new OptionalLoader(array_of_StringInstance);
  public static Loader<SchemaDefRequirement_class> SchemaDefRequirement_class = new EnumLoader(SchemaDefRequirement_class.class);
  public static Loader<SchemaDefRequirement_class> uri_SchemaDefRequirement_class_False_True_None = new UriLoader(SchemaDefRequirement_class, false, true, null);
  public static Loader<Object> union_of_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema = new UnionLoader(new Loader[] { CommandInputRecordSchema, CommandInputEnumSchema, CommandInputArraySchema });
  public static Loader<java.util.List<Object>> array_of_union_of_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema = new ArrayLoader(union_of_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema);
  public static Loader<Object> union_of_StringInstance_or_ExpressionLoader = new UnionLoader(new Loader[] { StringInstance, ExpressionLoader });
  public static Loader<Object> union_of_NullInstance_or_BooleanInstance_or_ExpressionLoader = new UnionLoader(new Loader[] { NullInstance, BooleanInstance, ExpressionLoader });
  public static Loader<LoadListingRequirement_class> LoadListingRequirement_class = new EnumLoader(LoadListingRequirement_class.class);
  public static Loader<LoadListingRequirement_class> uri_LoadListingRequirement_class_False_True_None = new UriLoader(LoadListingRequirement_class, false, true, null);
  public static Loader<Object> union_of_NullInstance_or_IntegerInstance_or_ExpressionLoader = new UnionLoader(new Loader[] { NullInstance, IntegerInstance, ExpressionLoader });
  public static Loader<Object> union_of_NullInstance_or_StringInstance_or_ExpressionLoader_or_array_of_StringInstance = new UnionLoader(new Loader[] { NullInstance, StringInstance, ExpressionLoader, array_of_StringInstance });
  public static Loader<java.util.Optional<String>> optional_ExpressionLoader = new OptionalLoader(ExpressionLoader);
  public static Loader<java.util.Optional<CommandLineBinding>> optional_CommandLineBinding = new OptionalLoader(CommandLineBinding);
  public static Loader<Object> union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance = new UnionLoader(new Loader[] { CWLType, CommandInputRecordSchema, CommandInputEnumSchema, CommandInputArraySchema, StringInstance });
  public static Loader<java.util.List<Object>> array_of_union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance = new ArrayLoader(union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance);
  public static Loader<Object> union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance = new UnionLoader(new Loader[] { CWLType, CommandInputRecordSchema, CommandInputEnumSchema, CommandInputArraySchema, StringInstance, array_of_union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance });
  public static Loader<Object> typedsl_union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance_2 = new TypeDslLoader(union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance, 2);
  public static Loader<java.util.List<CommandInputRecordField>> array_of_CommandInputRecordField = new ArrayLoader(CommandInputRecordField);
  public static Loader<java.util.Optional<java.util.List<Object>>> optional_array_of_CommandInputRecordField = new OptionalLoader(array_of_CommandInputRecordField);
  public static Loader<java.util.Optional<java.util.List<Object>>> idmap_fields_optional_array_of_CommandInputRecordField = new IdMapLoader(optional_array_of_CommandInputRecordField, "name", "type");
  public static Loader<Object> union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance = new UnionLoader(new Loader[] { CWLType, CommandOutputRecordSchema, CommandOutputEnumSchema, CommandOutputArraySchema, StringInstance });
  public static Loader<java.util.List<Object>> array_of_union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance = new ArrayLoader(union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance);
  public static Loader<Object> union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance = new UnionLoader(new Loader[] { CWLType, CommandOutputRecordSchema, CommandOutputEnumSchema, CommandOutputArraySchema, StringInstance, array_of_union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance });
  public static Loader<Object> typedsl_union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance_2 = new TypeDslLoader(union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance, 2);
  public static Loader<java.util.Optional<CommandOutputBinding>> optional_CommandOutputBinding = new OptionalLoader(CommandOutputBinding);
  public static Loader<java.util.List<CommandOutputRecordField>> array_of_CommandOutputRecordField = new ArrayLoader(CommandOutputRecordField);
  public static Loader<java.util.Optional<java.util.List<Object>>> optional_array_of_CommandOutputRecordField = new OptionalLoader(array_of_CommandOutputRecordField);
  public static Loader<java.util.Optional<java.util.List<Object>>> idmap_fields_optional_array_of_CommandOutputRecordField = new IdMapLoader(optional_array_of_CommandOutputRecordField, "name", "type");
  public static Loader<Object> union_of_CWLType_or_stdin_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance = new UnionLoader(new Loader[] { CWLType, stdin, CommandInputRecordSchema, CommandInputEnumSchema, CommandInputArraySchema, StringInstance, array_of_union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance });
  public static Loader<Object> typedsl_union_of_CWLType_or_stdin_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance_2 = new TypeDslLoader(union_of_CWLType_or_stdin_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandInputRecordSchema_or_CommandInputEnumSchema_or_CommandInputArraySchema_or_StringInstance, 2);
  public static Loader<Object> union_of_CWLType_or_stdout_or_stderr_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance = new UnionLoader(new Loader[] { CWLType, stdout, stderr, CommandOutputRecordSchema, CommandOutputEnumSchema, CommandOutputArraySchema, StringInstance, array_of_union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance });
  public static Loader<Object> typedsl_union_of_CWLType_or_stdout_or_stderr_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance_2 = new TypeDslLoader(union_of_CWLType_or_stdout_or_stderr_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance_or_array_of_union_of_CWLType_or_CommandOutputRecordSchema_or_CommandOutputEnumSchema_or_CommandOutputArraySchema_or_StringInstance, 2);
  public static Loader<CommandLineTool_class> CommandLineTool_class = new EnumLoader(CommandLineTool_class.class);
  public static Loader<CommandLineTool_class> uri_CommandLineTool_class_False_True_None = new UriLoader(CommandLineTool_class, false, true, null);
  public static Loader<java.util.List<CommandInputParameter>> array_of_CommandInputParameter = new ArrayLoader(CommandInputParameter);
  public static Loader<java.util.List<Object>> idmap_inputs_array_of_CommandInputParameter = new IdMapLoader(array_of_CommandInputParameter, "id", "type");
  public static Loader<java.util.List<CommandOutputParameter>> array_of_CommandOutputParameter = new ArrayLoader(CommandOutputParameter);
  public static Loader<java.util.List<Object>> idmap_outputs_array_of_CommandOutputParameter = new IdMapLoader(array_of_CommandOutputParameter, "id", "type");
  public static Loader<Object> union_of_StringInstance_or_ExpressionLoader_or_CommandLineBinding = new UnionLoader(new Loader[] { StringInstance, ExpressionLoader, CommandLineBinding });
  public static Loader<java.util.List<Object>> array_of_union_of_StringInstance_or_ExpressionLoader_or_CommandLineBinding = new ArrayLoader(union_of_StringInstance_or_ExpressionLoader_or_CommandLineBinding);
  public static Loader<java.util.Optional<java.util.List<Object>>> optional_array_of_union_of_StringInstance_or_ExpressionLoader_or_CommandLineBinding = new OptionalLoader(array_of_union_of_StringInstance_or_ExpressionLoader_or_CommandLineBinding);
  public static Loader<java.util.List<Integer>> array_of_IntegerInstance = new ArrayLoader(IntegerInstance);
  public static Loader<java.util.Optional<java.util.List<Object>>> optional_array_of_IntegerInstance = new OptionalLoader(array_of_IntegerInstance);
  public static Loader<DockerRequirement_class> DockerRequirement_class = new EnumLoader(DockerRequirement_class.class);
  public static Loader<DockerRequirement_class> uri_DockerRequirement_class_False_True_None = new UriLoader(DockerRequirement_class, false, true, null);
  public static Loader<SoftwareRequirement_class> SoftwareRequirement_class = new EnumLoader(SoftwareRequirement_class.class);
  public static Loader<SoftwareRequirement_class> uri_SoftwareRequirement_class_False_True_None = new UriLoader(SoftwareRequirement_class, false, true, null);
  public static Loader<java.util.List<SoftwarePackage>> array_of_SoftwarePackage = new ArrayLoader(SoftwarePackage);
  public static Loader<java.util.List<Object>> idmap_packages_array_of_SoftwarePackage = new IdMapLoader(array_of_SoftwarePackage, "package", "specs");
  public static Loader<java.util.Optional<java.util.List<String>>> uri_optional_array_of_StringInstance_False_False_None = new UriLoader(optional_array_of_StringInstance, false, false, null);
  public static Loader<InitialWorkDirRequirement_class> InitialWorkDirRequirement_class = new EnumLoader(InitialWorkDirRequirement_class.class);
  public static Loader<InitialWorkDirRequirement_class> uri_InitialWorkDirRequirement_class_False_True_None = new UriLoader(InitialWorkDirRequirement_class, false, true, null);
  public static Loader<Object> union_of_NullInstance_or_File_or_array_of_union_of_File_or_Directory_or_Directory_or_Dirent_or_ExpressionLoader = new UnionLoader(new Loader[] { NullInstance, File, array_of_union_of_File_or_Directory, Directory, Dirent, ExpressionLoader });
  public static Loader<java.util.List<Object>> array_of_union_of_NullInstance_or_File_or_array_of_union_of_File_or_Directory_or_Directory_or_Dirent_or_ExpressionLoader = new ArrayLoader(union_of_NullInstance_or_File_or_array_of_union_of_File_or_Directory_or_Directory_or_Dirent_or_ExpressionLoader);
  public static Loader<Object> union_of_array_of_union_of_NullInstance_or_File_or_array_of_union_of_File_or_Directory_or_Directory_or_Dirent_or_ExpressionLoader_or_ExpressionLoader = new UnionLoader(new Loader[] { array_of_union_of_NullInstance_or_File_or_array_of_union_of_File_or_Directory_or_Directory_or_Dirent_or_ExpressionLoader, ExpressionLoader });
  public static Loader<EnvVarRequirement_class> EnvVarRequirement_class = new EnumLoader(EnvVarRequirement_class.class);
  public static Loader<EnvVarRequirement_class> uri_EnvVarRequirement_class_False_True_None = new UriLoader(EnvVarRequirement_class, false, true, null);
  public static Loader<java.util.List<EnvironmentDef>> array_of_EnvironmentDef = new ArrayLoader(EnvironmentDef);
  public static Loader<java.util.List<Object>> idmap_envDef_array_of_EnvironmentDef = new IdMapLoader(array_of_EnvironmentDef, "envName", "envValue");
  public static Loader<ShellCommandRequirement_class> ShellCommandRequirement_class = new EnumLoader(ShellCommandRequirement_class.class);
  public static Loader<ShellCommandRequirement_class> uri_ShellCommandRequirement_class_False_True_None = new UriLoader(ShellCommandRequirement_class, false, true, null);
  public static Loader<ResourceRequirement_class> ResourceRequirement_class = new EnumLoader(ResourceRequirement_class.class);
  public static Loader<ResourceRequirement_class> uri_ResourceRequirement_class_False_True_None = new UriLoader(ResourceRequirement_class, false, true, null);
  public static Loader<Object> union_of_NullInstance_or_IntegerInstance_or_LongInstance_or_ExpressionLoader = new UnionLoader(new Loader[] { NullInstance, IntegerInstance, LongInstance, ExpressionLoader });
  public static Loader<WorkReuse_class> WorkReuse_class = new EnumLoader(WorkReuse_class.class);
  public static Loader<WorkReuse_class> uri_WorkReuse_class_False_True_None = new UriLoader(WorkReuse_class, false, true, null);
  public static Loader<Object> union_of_BooleanInstance_or_ExpressionLoader = new UnionLoader(new Loader[] { BooleanInstance, ExpressionLoader });
  public static Loader<NetworkAccess_class> NetworkAccess_class = new EnumLoader(NetworkAccess_class.class);
  public static Loader<NetworkAccess_class> uri_NetworkAccess_class_False_True_None = new UriLoader(NetworkAccess_class, false, true, null);
  public static Loader<InplaceUpdateRequirement_class> InplaceUpdateRequirement_class = new EnumLoader(InplaceUpdateRequirement_class.class);
  public static Loader<InplaceUpdateRequirement_class> uri_InplaceUpdateRequirement_class_False_True_None = new UriLoader(InplaceUpdateRequirement_class, false, true, null);
  public static Loader<ToolTimeLimit_class> ToolTimeLimit_class = new EnumLoader(ToolTimeLimit_class.class);
  public static Loader<ToolTimeLimit_class> uri_ToolTimeLimit_class_False_True_None = new UriLoader(ToolTimeLimit_class, false, true, null);
  public static Loader<Object> union_of_IntegerInstance_or_LongInstance_or_ExpressionLoader = new UnionLoader(new Loader[] { IntegerInstance, LongInstance, ExpressionLoader });
  public static Loader<java.util.Optional<InputBinding>> optional_InputBinding = new OptionalLoader(InputBinding);
  public static Loader<ExpressionTool_class> ExpressionTool_class = new EnumLoader(ExpressionTool_class.class);
  public static Loader<ExpressionTool_class> uri_ExpressionTool_class_False_True_None = new UriLoader(ExpressionTool_class, false, true, null);
  public static Loader<java.util.List<WorkflowInputParameter>> array_of_WorkflowInputParameter = new ArrayLoader(WorkflowInputParameter);
  public static Loader<java.util.List<Object>> idmap_inputs_array_of_WorkflowInputParameter = new IdMapLoader(array_of_WorkflowInputParameter, "id", "type");
  public static Loader<java.util.List<ExpressionToolOutputParameter>> array_of_ExpressionToolOutputParameter = new ArrayLoader(ExpressionToolOutputParameter);
  public static Loader<java.util.List<Object>> idmap_outputs_array_of_ExpressionToolOutputParameter = new IdMapLoader(array_of_ExpressionToolOutputParameter, "id", "type");
  public static Loader<Object> uri_union_of_NullInstance_or_StringInstance_or_array_of_StringInstance_False_False_1 = new UriLoader(union_of_NullInstance_or_StringInstance_or_array_of_StringInstance, false, false, 1);
  public static Loader<java.util.Optional<LinkMergeMethod>> optional_LinkMergeMethod = new OptionalLoader(LinkMergeMethod);
  public static Loader<Object> uri_union_of_NullInstance_or_StringInstance_or_array_of_StringInstance_False_False_2 = new UriLoader(union_of_NullInstance_or_StringInstance_or_array_of_StringInstance, false, false, 2);
  public static Loader<java.util.List<WorkflowStepInput>> array_of_WorkflowStepInput = new ArrayLoader(WorkflowStepInput);
  public static Loader<java.util.List<Object>> idmap_in_array_of_WorkflowStepInput = new IdMapLoader(array_of_WorkflowStepInput, "id", "source");
  public static Loader<Object> union_of_StringInstance_or_WorkflowStepOutput = new UnionLoader(new Loader[] { StringInstance, WorkflowStepOutput });
  public static Loader<java.util.List<Object>> array_of_union_of_StringInstance_or_WorkflowStepOutput = new ArrayLoader(union_of_StringInstance_or_WorkflowStepOutput);
  public static Loader<java.util.List<Object>> uri_array_of_union_of_StringInstance_or_WorkflowStepOutput_True_False_None = new UriLoader(array_of_union_of_StringInstance_or_WorkflowStepOutput, true, false, null);
  public static Loader<java.util.List<Object>> array_of_AnyInstance = new ArrayLoader(AnyInstance);
  public static Loader<java.util.Optional<java.util.List<Object>>> optional_array_of_AnyInstance = new OptionalLoader(array_of_AnyInstance);
  public static Loader<java.util.Optional<java.util.List<Object>>> idmap_hints_optional_array_of_AnyInstance = new IdMapLoader(optional_array_of_AnyInstance, "class", "None");
  public static Loader<Object> union_of_StringInstance_or_CommandLineTool_or_ExpressionTool_or_Workflow = new UnionLoader(new Loader[] { StringInstance, CommandLineTool, ExpressionTool, Workflow });
  public static Loader<Object> uri_union_of_StringInstance_or_CommandLineTool_or_ExpressionTool_or_Workflow_False_False_None = new UriLoader(union_of_StringInstance_or_CommandLineTool_or_ExpressionTool_or_Workflow, false, false, null);
  public static Loader<Object> uri_union_of_NullInstance_or_StringInstance_or_array_of_StringInstance_False_False_0 = new UriLoader(union_of_NullInstance_or_StringInstance_or_array_of_StringInstance, false, false, 0);
  public static Loader<java.util.Optional<ScatterMethod>> optional_ScatterMethod = new OptionalLoader(ScatterMethod);
  public static Loader<java.util.Optional<ScatterMethod>> uri_optional_ScatterMethod_False_True_None = new UriLoader(optional_ScatterMethod, false, true, null);
  public static Loader<Workflow_class> Workflow_class = new EnumLoader(Workflow_class.class);
  public static Loader<Workflow_class> uri_Workflow_class_False_True_None = new UriLoader(Workflow_class, false, true, null);
  public static Loader<java.util.List<WorkflowOutputParameter>> array_of_WorkflowOutputParameter = new ArrayLoader(WorkflowOutputParameter);
  public static Loader<java.util.List<Object>> idmap_outputs_array_of_WorkflowOutputParameter = new IdMapLoader(array_of_WorkflowOutputParameter, "id", "type");
  public static Loader<java.util.List<WorkflowStep>> array_of_WorkflowStep = new ArrayLoader(WorkflowStep);
  public static Loader<java.util.List<Object>> idmap_steps_array_of_WorkflowStep = new IdMapLoader(array_of_WorkflowStep, "id", "None");
  public static Loader<SubworkflowFeatureRequirement_class> SubworkflowFeatureRequirement_class = new EnumLoader(SubworkflowFeatureRequirement_class.class);
  public static Loader<SubworkflowFeatureRequirement_class> uri_SubworkflowFeatureRequirement_class_False_True_None = new UriLoader(SubworkflowFeatureRequirement_class, false, true, null);
  public static Loader<ScatterFeatureRequirement_class> ScatterFeatureRequirement_class = new EnumLoader(ScatterFeatureRequirement_class.class);
  public static Loader<ScatterFeatureRequirement_class> uri_ScatterFeatureRequirement_class_False_True_None = new UriLoader(ScatterFeatureRequirement_class, false, true, null);
  public static Loader<MultipleInputFeatureRequirement_class> MultipleInputFeatureRequirement_class = new EnumLoader(MultipleInputFeatureRequirement_class.class);
  public static Loader<MultipleInputFeatureRequirement_class> uri_MultipleInputFeatureRequirement_class_False_True_None = new UriLoader(MultipleInputFeatureRequirement_class, false, true, null);
  public static Loader<StepInputExpressionRequirement_class> StepInputExpressionRequirement_class = new EnumLoader(StepInputExpressionRequirement_class.class);
  public static Loader<StepInputExpressionRequirement_class> uri_StepInputExpressionRequirement_class_False_True_None = new UriLoader(StepInputExpressionRequirement_class, false, true, null);
  public static Loader<Object> union_of_CommandLineTool_or_ExpressionTool_or_Workflow = new UnionLoader(new Loader[] { CommandLineTool, ExpressionTool, Workflow });
  public static Loader<java.util.List<Object>> array_of_union_of_CommandLineTool_or_ExpressionTool_or_Workflow = new ArrayLoader(union_of_CommandLineTool_or_ExpressionTool_or_Workflow);
  public static Loader<Object> union_of_CommandLineTool_or_ExpressionTool_or_Workflow_or_array_of_union_of_CommandLineTool_or_ExpressionTool_or_Workflow = new UnionLoader(new Loader[] { CommandLineTool, ExpressionTool, Workflow, array_of_union_of_CommandLineTool_or_ExpressionTool_or_Workflow });

}
